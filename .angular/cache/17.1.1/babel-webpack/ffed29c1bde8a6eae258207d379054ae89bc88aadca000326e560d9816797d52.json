{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../projects/angular-mydatepicker/src/lib/angular-mydatepicker.input\";\nfunction DatePickerInline_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function DatePickerInline_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onTodayPlus3());\n    });\n    i0.ɵɵtext(1, \"Range today + 3\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DatePickerInline_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function DatePickerInline_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onYesterdayPlus3());\n    });\n    i0.ɵɵtext(1, \"Range yesterday + 3\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let DatePickerInline = /*#__PURE__*/(() => {\n  class DatePickerInline {\n    constructor() {\n      this.myDatePickerOptions = {\n        dateRange: false,\n        inline: true,\n        dateFormat: 'dd.mm.yyyy'\n      };\n      this.selectedTextNormal = '';\n      this.validDate = false;\n      this.inputText = \"\";\n      this.model = null; // not initial date set\n    }\n    ngOnInit() {\n      console.log('onInit(): DatePickerInline');\n    }\n    onDateRange(checked) {\n      this.model = null;\n      let copy = this.getCopyOfOptions();\n      copy.dateRange = checked;\n      this.myDatePickerOptions = copy;\n    }\n    onSubmit() {\n      console.log('onSubmit(): model: ', this.model);\n    }\n    onDisableUntilYesterday() {\n      let copy = this.getCopyOfOptions();\n      let d = new Date();\n      d.setDate(d.getDate() - 1);\n      copy.disableUntil = {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate()\n      };\n      this.myDatePickerOptions = copy;\n    }\n    onInitToPastMonth() {\n      let d = new Date();\n      d.setMonth(d.getMonth() - 1);\n      this.model = {\n        isRange: false,\n        singleDate: {\n          date: {\n            year: d.getFullYear(),\n            month: d.getMonth() + 1,\n            day: d.getDate()\n          }\n        },\n        dateRange: null\n      };\n    }\n    onTodayPlus3() {\n      let today = new Date();\n      let date = new Date();\n      date.setDate(date.getDate() + 3);\n      this.model = {\n        isRange: true,\n        singleDate: null,\n        dateRange: {\n          beginDate: {\n            year: today.getFullYear(),\n            month: today.getMonth() + 1,\n            day: today.getDate()\n          },\n          endDate: {\n            year: date.getFullYear(),\n            month: date.getMonth() + 1,\n            day: date.getDate()\n          }\n        }\n      };\n    }\n    onYesterdayPlus3() {\n      let today = new Date();\n      today.setDate(today.getDate() - 1);\n      let date = new Date();\n      date.setDate(date.getDate() + 2);\n      this.model = {\n        isRange: true,\n        singleDate: null,\n        dateRange: {\n          beginDate: {\n            year: today.getFullYear(),\n            month: today.getMonth() + 1,\n            day: today.getDate()\n          },\n          endDate: {\n            year: date.getFullYear(),\n            month: date.getMonth() + 1,\n            day: date.getDate()\n          }\n        }\n      };\n    }\n    // callbacks\n    onDateChanged(event) {\n      console.log('onDateChanged(): ', event);\n      if (!event.isRange) {\n        let {\n          date,\n          jsDate,\n          formatted,\n          epoc\n        } = event.singleDate;\n        if (formatted !== '') {\n          this.selectedTextNormal = 'Formatted: ' + formatted + ' - epoc timestamp: ' + epoc;\n          this.validDate = true;\n          this.inputText = formatted;\n        } else {\n          this.selectedTextNormal = '';\n        }\n      } else {\n        let {\n          formatted\n        } = event.dateRange;\n        if (formatted !== '') {\n          this.selectedTextNormal = 'Formatted: ' + formatted;\n          this.validDate = true;\n          this.inputText = formatted;\n        } else {\n          this.selectedTextNormal = '';\n        }\n      }\n    }\n    onCalendarViewChanged(event) {\n      console.log('onCalendarViewChanged(): Year: ', event.year, ' - month: ', event.month, ' - first: ', event.first, ' - last: ', event.last);\n    }\n    onDateRangeSelection(event) {\n      console.log('onDateRangeSelection(): event: ', event);\n    }\n    getCopyOfOptions() {\n      return JSON.parse(JSON.stringify(this.myDatePickerOptions));\n    }\n    static #_ = this.ɵfac = function DatePickerInline_Factory(t) {\n      return new (t || DatePickerInline)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DatePickerInline,\n      selectors: [[\"date-picker-inline\"]],\n      decls: 31,\n      vars: 5,\n      consts: [[\"type\", \"checkbox\", 2, \"cursor\", \"pointer\", 3, \"checked\", \"change\"], [\"angular-mydatepicker\", \"\", \"type\", \"hidden\", 1, \"datePicker\", 3, \"ngModel\", \"options\", \"ngModelChange\", \"dateChanged\", \"calendarViewChanged\", \"rangeDateSelection\"], [\"dp\", \"angular-mydatepicker\"], [\"type\", \"button\", 1, \"submitButton\", 3, \"click\"], [\"type\", \"button\", \"class\", \"submitButton\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"headerActionButton\", 3, \"click\"]],\n      template: function DatePickerInline_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r7 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"label\")(3, \"span\");\n          i0.ɵɵtext(4, \"Date range:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 0);\n          i0.ɵɵlistener(\"change\", function DatePickerInline_Template_input_change_5_listener($event) {\n            return ctx.onDateRange($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"div\")(7, \"input\", 1, 2);\n          i0.ɵɵlistener(\"ngModelChange\", function DatePickerInline_Template_input_ngModelChange_7_listener($event) {\n            return ctx.model = $event;\n          })(\"dateChanged\", function DatePickerInline_Template_input_dateChanged_7_listener($event) {\n            return ctx.onDateChanged($event);\n          })(\"calendarViewChanged\", function DatePickerInline_Template_input_calendarViewChanged_7_listener($event) {\n            return ctx.onCalendarViewChanged($event);\n          })(\"rangeDateSelection\", function DatePickerInline_Template_input_rangeDateSelection_7_listener($event) {\n            return ctx.onDateRangeSelection($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\")(10, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function DatePickerInline_Template_button_click_10_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtext(11, \"Submit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function DatePickerInline_Template_button_click_12_listener() {\n            i0.ɵɵrestoreView(_r7);\n            const _r0 = i0.ɵɵreference(8);\n            return i0.ɵɵresetView(_r0.clearDate());\n          });\n          i0.ɵɵtext(13, \"Clear\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function DatePickerInline_Template_button_click_14_listener() {\n            return ctx.onDisableUntilYesterday();\n          });\n          i0.ɵɵtext(15, \"Disable until yesterday\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\");\n          i0.ɵɵtemplate(17, DatePickerInline_button_17_Template, 2, 0, \"button\", 4)(18, DatePickerInline_button_18_Template, 2, 0, \"button\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\")(20, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function DatePickerInline_Template_button_click_20_listener() {\n            return ctx.onInitToPastMonth();\n          });\n          i0.ɵɵtext(21, \"Init to past month\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"div\")(23, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function DatePickerInline_Template_button_click_23_listener() {\n            i0.ɵɵrestoreView(_r7);\n            const _r0 = i0.ɵɵreference(8);\n            return i0.ɵɵresetView(_r0.headerAction(1));\n          });\n          i0.ɵɵtext(24, \"Prev\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function DatePickerInline_Template_button_click_25_listener() {\n            i0.ɵɵrestoreView(_r7);\n            const _r0 = i0.ɵɵreference(8);\n            return i0.ɵɵresetView(_r0.headerAction(2));\n          });\n          i0.ɵɵtext(26, \"Next\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function DatePickerInline_Template_button_click_27_listener() {\n            i0.ɵɵrestoreView(_r7);\n            const _r0 = i0.ɵɵreference(8);\n            return i0.ɵɵresetView(_r0.headerAction(3));\n          });\n          i0.ɵɵtext(28, \"Month\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function DatePickerInline_Template_button_click_29_listener() {\n            i0.ɵɵrestoreView(_r7);\n            const _r0 = i0.ɵɵreference(8);\n            return i0.ɵɵresetView(_r0.headerAction(4));\n          });\n          i0.ɵɵtext(30, \"Year\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.model)(\"options\", ctx.myDatePickerOptions);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngIf\", ctx.myDatePickerOptions.dateRange);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.myDatePickerOptions.dateRange);\n        }\n      },\n      dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.AngularMyDatePickerDirective],\n      styles: [\".datePicker[_ngcontent-%COMP%]{margin-top:20px}.submitButton[_ngcontent-%COMP%], .headerActionButton[_ngcontent-%COMP%]{margin-top:20px;cursor:pointer}\"]\n    });\n  }\n  return DatePickerInline;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}