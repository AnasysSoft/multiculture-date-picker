{"ast":null,"code":"import { AngularMyDatePickerDirective, CalAnimation, DefaultConfigService, DefaultView } from '../../../projects/angular-mydatepicker/src/public-api';\nimport { CalendarType } from \"../../../projects/angular-mydatepicker/src/lib/enums/calendar-type.enum\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../projects/angular-mydatepicker/src/public-api\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../projects/angular-mydatepicker/src/lib/angular-mydatepicker.input\";\nconst _c0 = [\"dp\"];\nfunction DatePickerNgmodel_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r9 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(c_r9);\n  }\n}\nfunction DatePickerNgmodel_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const l_r10 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(l_r10);\n  }\n}\nfunction DatePickerNgmodel_option_183_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const df_r11 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(df_r11);\n  }\n}\nfunction DatePickerNgmodel_option_190_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const s_r12 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(s_r12);\n  }\n}\nfunction DatePickerNgmodel_option_198_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const a_r13 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(a_r13);\n  }\n}\nfunction DatePickerNgmodel_option_205_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r14 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(c_r14);\n  }\n}\nfunction DatePickerNgmodel_div_242_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r15.selectedTextNormal);\n  }\n}\nfunction DatePickerNgmodel_div_242_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Invalid date\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = (a0, a1) => ({\n  \"okDate\": a0,\n  \"invalidDate\": a1\n});\nfunction DatePickerNgmodel_div_242_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, DatePickerNgmodel_div_242_span_1_Template, 2, 1, \"span\", 18)(2, DatePickerNgmodel_div_242_span_2_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c1, ctx_r8.validDate && ctx_r8.selectedTextNormal.length, !ctx_r8.validDate));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.validDate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.validDate);\n  }\n}\nexport let DatePickerNgmodel = /*#__PURE__*/(() => {\n  class DatePickerNgmodel {\n    constructor(config) {\n      this.config = config;\n      this.myJalaliDatePickerOptions = this.config.getDefaultConfig(CalendarType.Jalali);\n      this.myGregorianDatePickerOptions = this.config.getDefaultConfig(CalendarType.Jalali);\n      this.selectedTextNormal = '';\n      this.disabled = false;\n      this.validDate = false;\n      this.inputText = \"\";\n      this.model = null; // not initial date set\n      this.defMonth = {\n        defMonth: '',\n        overrideSelection: false\n      };\n      this.selectorSizes = new Array('266px x 266px', '200px x 220px', '260px x 290px');\n      this.defaultViews = new Array('date', 'month', 'year');\n      this.calAnimations = new Array('None', 'Fade', 'ScaleTop-ScaleCenter', 'ScaleCenter-ScaleTop', 'Rotate', 'FlipDiagonal');\n      this.styleColor = new Array('Default', 'Grey', 'Blue', 'Green', 'Red', 'Yellow', 'Dark', 'Bold');\n      this.locale = 'en';\n      this.locales = ['fa | Farsi', 'en | English', 'fr | French', 'fr-ch | French - Switzerland', 'ja | Japanese', 'fi | Finnish', 'es | Spanish', 'hu | Hungarian', 'sv | Swedish', 'nl | Dutch', 'ru | Russian', 'uk | Ukrainian', 'no | Norwegian', 'tr | Turkish', 'pt-br | Portuguese - Brazil', 'de | German', 'de-ch | German - Switzerland', 'it | Italian', 'it-ch | Italian - Switzerland', 'pl | Polish', 'my | Burmese', 'sk | Slovak', 'sl | Slovenian', 'zh-cn | Chinese - China', 'he | Hebrew', 'ro | Romanian - Romania', 'ca | Catalan', 'id | Indonesian', 'en-au | English - Australia', 'am-et | Amharic', 'cs | Czech', 'el | Greek', 'kk | Kazakh', 'th | Thai', 'ko-kr | Korean', 'da | Danish', 'lt | Lithuanian', 'vi | Vietnamese', 'bn | Bengali', 'bg | Bulgarian', 'hr | Croatian', 'ar | Arabic', 'is | Icelandic', 'tw | Chinese - Taiwan', 'lv | Latvian', 'et | Estonian'];\n      this.calendar = CalendarType.Jalali;\n      this.calendars = [CalendarType.Gregorian, CalendarType.Jalali];\n    }\n    clearDate() {\n      this.ngxdp.clearDate();\n    }\n    setDate() {\n      // Initialize single date (today)\n      if (this.myGregorianDatePickerOptions.dateRange) {\n        alert(\"Date range mode is enabled! Change mode to single date before set single date.\");\n        return;\n      }\n      this.model = {\n        isRange: false,\n        singleDate: {\n          jsDate: new Date()\n        }\n      };\n    }\n    setDateRange() {\n      // Initialize date range (begin: today, end: today + 2)\n      if (!this.myGregorianDatePickerOptions.dateRange) {\n        alert(\"Date range mode is not enabled! Change mode to date range before set date range date.\");\n        return;\n      }\n      let begin = new Date();\n      let end = new Date();\n      end.setDate(end.getDate() + 2);\n      this.model = {\n        isRange: true,\n        dateRange: {\n          beginJsDate: begin,\n          endJsDate: end\n        }\n      };\n    }\n    onOpenSelectorTopOfInput(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.openSelectorTopOfInput = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onAlignSelectorRight(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.alignSelectorRight = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onShowSelectorArrow(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.showSelectorArrow = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onMonthSelector(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.monthSelector = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onYearSelector(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.yearSelector = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onDisableToday(checked) {\n      let d = new Date();\n      let copy = this.getCopyOfOptions();\n      copy.disableDates = checked ? [{\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate()\n      }] : [];\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onMarkToday(checked) {\n      let d = new Date();\n      let copy = this.getCopyOfOptions();\n      copy.markDates = checked ? [{\n        dates: [{\n          year: d.getFullYear(),\n          month: d.getMonth() + 1,\n          day: d.getDate()\n        }],\n        color: '#C30000'\n      }] : [];\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onMarkWeekends(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.markWeekends = checked ? {\n        marked: true,\n        color: 'blue'\n      } : {\n        marked: false,\n        color: ''\n      };\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onHighlighSaturday(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.satHighlight = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onHighlighSunday(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.sunHighlight = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onHighlightDates(checked) {\n      let d = new Date();\n      let copy = this.getCopyOfOptions();\n      let dates = [];\n      dates.push({\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate()\n      });\n      d.setDate(d.getDate() + 1);\n      dates.push({\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate()\n      });\n      dates.push({\n        year: 2017,\n        month: 6,\n        day: 1\n      });\n      copy.highlightDates = checked ? dates : [];\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onDisableWeekends(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.disableWeekends = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onDisableHeaderButtons(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.disableHeaderButtons = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onShowWeekNumbers(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.showWeekNumbers = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onCloseSelectorOnDateSelect(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.closeSelectorOnDateSelect = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onCloseSelectorOnDocumentClick(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.closeSelectorOnDocumentClick = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onDateRange(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.dateRange = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onAppendSelectorToBody(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.appendSelectorToBody = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onDisableWednesday(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.disableWeekdays = checked ? ['we'] : [];\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onDisable24Day(checked) {\n      let d = new Date();\n      let copy = this.getCopyOfOptions();\n      copy.disableDates = checked ? [{\n        year: 0,\n        month: 0,\n        day: 24\n      }] : [];\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onFocusInputOnDateSelect(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.focusInputOnDateSelect = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onDisableUntilYesterday(checked) {\n      let copy = this.getCopyOfOptions();\n      let d = new Date();\n      d.setDate(d.getDate() - 1);\n      copy.disableUntil = checked ? {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate()\n      } : {\n        year: 0,\n        month: 0,\n        day: 0\n      };\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onDisableSinceTomorrow(checked) {\n      let copy = this.getCopyOfOptions();\n      let d = new Date();\n      d.setDate(d.getDate() + 1);\n      copy.disableSince = checked ? {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate()\n      } : {\n        year: 0,\n        month: 0,\n        day: 0\n      };\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onShowMonthNumber(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.showMonthNumber = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onShowFooterBar(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.showFooterToday = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onDisableOwnStyle(checked) {\n      let copy = this.getCopyOfOptions();\n      let d = new Date();\n      d.setDate(d.getDate() - 1);\n      let yesterday = {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate()\n      };\n      d.setDate(d.getDate() + 1);\n      let today = {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate()\n      };\n      d.setDate(d.getDate() + 1);\n      let tomorrow = {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate()\n      };\n      copy.disableDates = checked ? [{\n        dates: [yesterday, today, tomorrow],\n        styleClass: 'disabledDates'\n      }] : [];\n      copy.stylesData = {\n        selector: 'dp1',\n        styles: this.disableAndMarkOwnStyles()\n      };\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onMarkOwnStyle(checked) {\n      let copy = this.getCopyOfOptions();\n      let d = new Date();\n      d.setDate(d.getDate() + 2);\n      let yesterday = {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate()\n      };\n      d.setDate(d.getDate() + 1);\n      let today = {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate()\n      };\n      d.setDate(d.getDate() + 1);\n      let tomorrow = {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate()\n      };\n      copy.markDates = checked ? [{\n        dates: [yesterday],\n        styleClass: 'pilatesDates'\n      }, {\n        dates: [today],\n        styleClass: 'boxingDates'\n      }, {\n        dates: [tomorrow],\n        color: 'red',\n        styleClass: 'pilatesDatesAndBoxingDates'\n      }] : [];\n      copy.stylesData = {\n        selector: 'dp1',\n        styles: this.disableAndMarkOwnStyles()\n      };\n      this.myGregorianDatePickerOptions = copy;\n    }\n    disableAndMarkOwnStyles() {\n      return `\n      .dp1 .disabledDates {\n        background: repeating-linear-gradient(-45deg, red 7px, #ccc 8px, transparent 7px, transparent 14px);\n      }\n      .dp1 .pilatesDates {\n        background: repeating-linear-gradient(-45deg, green 7px, #ccc 8px, transparent 7px, transparent 14px);\n      }\n      .dp1 .boxingDates {\n        background: repeating-linear-gradient(-45deg, yellow 7px, #ccc 8px, transparent 7px, transparent 14px);\n      }\n      .dp1 .pilatesDatesAndBoxingDates {\n        background: repeating-linear-gradient(-45deg, blue 7px, #ccc 8px, transparent 7px, transparent 14px);\n      }\n    `;\n    }\n    onRtl(checked) {\n      let copy = this.getCopyOfOptions();\n      copy.rtl = checked;\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onDisableInput(checked) {\n      this.disabled = checked;\n    }\n    onSelectorSize(size) {\n      let copy = this.getCopyOfOptions();\n      if (size === '266px x 266px') {\n        copy.selectorHeight = '266px';\n        copy.selectorWidth = '266px';\n      } else if (size === '200px x 220px') {\n        copy.selectorHeight = '200px';\n        copy.selectorWidth = '220px';\n      } else {\n        copy.selectorHeight = '260px';\n        copy.selectorWidth = '290px';\n      }\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onCalendarAnimation(animation) {\n      let copy = this.getCopyOfOptions();\n      if (animation === 'None') {\n        copy.calendarAnimation = {\n          in: CalAnimation.None,\n          out: CalAnimation.None\n        };\n      } else if (animation === 'Fade') {\n        copy.calendarAnimation = {\n          in: CalAnimation.Fade,\n          out: CalAnimation.Fade\n        };\n      } else if (animation === 'ScaleTop-ScaleCenter') {\n        copy.calendarAnimation = {\n          in: CalAnimation.ScaleTop,\n          out: CalAnimation.ScaleCenter\n        };\n      } else if (animation === 'ScaleCenter-ScaleTop') {\n        copy.calendarAnimation = {\n          in: CalAnimation.ScaleCenter,\n          out: CalAnimation.ScaleTop\n        };\n      } else if (animation === 'Rotate') {\n        copy.calendarAnimation = {\n          in: CalAnimation.Rotate,\n          out: CalAnimation.Rotate\n        };\n      } else if (animation === 'FlipDiagonal') {\n        copy.calendarAnimation = {\n          in: CalAnimation.FlipDiagonal,\n          out: CalAnimation.FlipDiagonal\n        };\n      }\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onOverrideCalColor(color) {\n      let copy = this.getCopyOfOptions();\n      copy.stylesData.selector = 'dp1';\n      copy.selectorHeight = '266px';\n      copy.selectorWidth = '266px';\n      if (color === 'Default') {\n        copy.stylesData.styles = '';\n      } else if (color === 'Grey') {\n        copy.stylesData.styles = `\n      .dp1 .myDpIconLeftArrow,\n      .dp1 .myDpIconRightArrow,\n      .dp1 .myDpHeaderBtn {\n          color: #6c757d;\n      }\n      .dp1 .myDpHeaderBtn:focus,\n      .dp1 .myDpMonthLabel:focus,\n      .dp1 .myDpYearLabel:focus {\n        color: #aaa;\n      }\n      .dp1 .myDpDaycell:focus,\n      .dp1 .myDpMonthcell:focus,\n      .dp1 .myDpYearcell:focus {\n        box-shadow: inset 0 0 0 1px #ccc;\n      }\n      .dp1 .myDpSelector:focus {\n        box-shadow: -1px 1px 6px 0px #bbb;\n      }\n      .dp1 .myDpSelectorArrow:focus:before {\n        border-bottom-color: #bbb;\n      }\n      .dp1 .myDpCurrMonth,\n      .dp1 .myDpMonthcell,\n      .dp1 .myDpYearcell {\n          color: #6c757d;\n          font-weight: bold;\n      }\n      .dp1 .myDpDaycellWeekNbr {\n        color: #6c757d;\n      }\n      .dp1 .myDpPrevMonth,\n      .dp1 .myDpNextMonth {\n          color: #aaa;\n      }\n      .dp1 .myDpWeekDayTitle {\n        background-color: transparent;\n        color: #6c757d;\n        font-weight: bold;\n      }\n      .dp1 .myDpHeaderBtnEnabled:hover,\n      .dp1 .myDpMonthLabel:hover,\n      .dp1 .myDpYearLabel:hover,\n      .dp1 .myDpFooterBtn:hover {\n          color: #212529;\n      }\n      .dp1 .myDpMarkCurrDay,\n      .dp1 .myDpMarkCurrMonth,\n      .dp1 .myDpMarkCurrYear {\n          border-bottom: 2px solid #6c757d;\n      }\n      .dp1 .myDpDisabled {\n          color: #999;\n      }\n      .dp1 .myDpHighlight {\n          color: #cd5c5c;\n      }\n      .dp1 .myDpTableSingleDay:hover,\n      .dp1 .myDpTableSingleMonth:hover,\n      .dp1 .myDpTableSingleYear:hover {\n          background-color: #ccc;\n          color: #222;\n      }\n      .dp1 .myDpRangeColor {\n        background-color: #eee;\n      }\n      .dp1 .myDpSelectedDay,\n      .dp1 .myDpSelectedMonth,\n      .dp1 .myDpSelectedYear {\n        background-color: #ccc;\n        color: #222;\n      }\n    `;\n      } else if (color === 'Blue') {\n        copy.stylesData.styles = `\n      .dp1 .myDpIconLeftArrow,\n      .dp1 .myDpIconRightArrow,\n      .dp1 .myDpHeaderBtn {\n          color: #3855c1;\n      }\n      .dp1 .myDpHeaderBtn:focus,\n      .dp1 .myDpMonthLabel:focus,\n      .dp1 .myDpYearLabel:focus {\n        color: #66afe9;\n      }\n      .dp1 .myDpDaycell:focus,\n      .dp1 .myDpMonthcell:focus,\n      .dp1 .myDpYearcell:focus {\n        box-shadow: inset 0 0 0 1px #66afe9;\n      }\n      .dp1 .myDpSelector:focus {\n        box-shadow: -1px 1px 6px 0px #ADD8E6;\n      }\n      .dp1 .myDpSelectorArrow:focus:before {\n        border-bottom-color: #ADD8E6;\n      }\n      .dp1 .myDpCurrMonth,\n      .dp1 .myDpMonthcell,\n      .dp1 .myDpYearcell {\n          color: #3855c1;\n          font-weight: bold;\n      }\n      .dp1 .myDpDaycellWeekNbr {\n        color: #3855c1;\n      }\n      .dp1 .myDpPrevMonth,\n      .dp1 .myDpNextMonth {\n          color: #6495ED;\n      }\n      .dp1 .myDpWeekDayTitle {\n          background-color: transparent;\n          color: #3855c1;\n          font-weight: bold;\n      }\n      .dp1 .myDpHeaderBtnEnabled:hover,\n      .dp1 .myDpMonthLabel:hover,\n      .dp1 .myDpYearLabel:hover,\n      .dp1 .myDpFooterBtn:hover {\n          color: #add8e6;\n      }\n      .dp1 .myDpMarkCurrDay,\n      .dp1 .myDpMarkCurrMonth,\n      .dp1 .myDpMarkCurrYear {\n          border-bottom: 2px solid #3855c1;\n      }\n      .dp1 .myDpDisabled {\n          color: #999;\n      }\n      .dp1 .myDpHighlight {\n          color: #cd5c5c;\n      }\n      .dp1 .myDpTableSingleDay:hover,\n      .dp1 .myDpTableSingleMonth:hover,\n      .dp1 .myDpTableSingleYear:hover {\n          background-color: #add8e6;\n          color: #3855c1;\n      }\n      .dp1 .myDpRangeColor {\n        background-color: #dbeaff;\n      }\n      .dp1 .myDpSelectedDay,\n      .dp1 .myDpSelectedMonth,\n      .dp1 .myDpSelectedYear {\n        background-color: #8EBFFF;\n      }\n    `;\n      } else if (color === 'Green') {\n        copy.stylesData.styles = `\n      .dp1 .myDpIconLeftArrow,\n      .dp1 .myDpIconRightArrow,\n      .dp1 .myDpHeaderBtn {\n          color: #228B22;\n      }\n      .dp1 .myDpHeaderBtn:focus,\n      .dp1 .myDpMonthLabel:focus,\n      .dp1 .myDpYearLabel:focus {\n        color: #8FBC8F;\n      }\n      .dp1 .myDpDaycell:focus,\n      .dp1 .myDpMonthcell:focus,\n      .dp1 .myDpYearcell:focus {\n        box-shadow: inset 0 0 0 1px #8FBC8F;\n      }\n      .dp1 .myDpSelector:focus {\n        box-shadow: -1px 1px 6px 0px #B0D0B0;\n      }\n      .dp1 .myDpSelectorArrow:focus:before {\n        border-bottom-color: #B0D0B0;\n      }\n      .dp1 .myDpCurrMonth,\n      .dp1 .myDpMonthcell,\n      .dp1 .myDpYearcell {\n          color: #228B22;\n          font-weight: bold;\n      }\n      .dp1 .myDpDaycellWeekNbr {\n        color: #228B22;\n      }\n      .dp1 .myDpPrevMonth,\n      .dp1 .myDpNextMonth {\n          color: #8FBC8F;\n      }\n      .dp1 .myDpWeekDayTitle {\n        background-color: transparent;\n        color: #228B22;\n        font-weight: bold;\n      }\n      .dp1 .myDpHeaderBtnEnabled:hover,\n      .dp1 .myDpMonthLabel:hover,\n      .dp1 .myDpYearLabel:hover,\n      .dp1 .myDpFooterBtn:hover {\n          color: #90EE90;\n      }\n      .dp1 .myDpMarkCurrDay,\n      .dp1 .myDpMarkCurrMonth,\n      .dp1 .myDpMarkCurrYear {\n          border-bottom: 2px solid #228B22;\n      }\n      .dp1 .myDpDisabled {\n          color: #999;\n      }\n      .dp1 .myDpHighlight {\n          color: #cd5c5c;\n      }\n      .dp1 .myDpTableSingleDay:hover,\n      .dp1 .myDpTableSingleMonth:hover,\n      .dp1 .myDpTableSingleYear:hover {\n          background-color: #90EE90;\n          color: #228B22;\n      }\n      .dp1 .myDpRangeColor {\n        background-color: #D1F8D1;\n      }\n      .dp1 .myDpSelectedDay,\n      .dp1 .myDpSelectedMonth,\n      .dp1 .myDpSelectedYear {\n        background-color: #00FA9A;\n      }\n    `;\n      } else if (color === 'Red') {\n        copy.stylesData.styles = `\n      .dp1 .myDpIconLeftArrow,\n      .dp1 .myDpIconRightArrow,\n      .dp1 .myDpHeaderBtn {\n          color: #B22222;\n      }\n      .dp1 .myDpHeaderBtn:focus,\n      .dp1 .myDpMonthLabel:focus,\n      .dp1 .myDpYearLabel:focus {\n        color: #FF6347;\n      }\n      .dp1 .myDpDaycell:focus,\n      .dp1 .myDpMonthcell:focus,\n      .dp1 .myDpYearcell:focus {\n        box-shadow: inset 0 0 0 1px #FF6347;\n      }\n      .dp1 .myDpSelector:focus {\n        box-shadow: -1px 1px 6px 0px #F9CCCC;\n      }\n      .dp1 .myDpSelectorArrow:focus:before {\n        border-bottom-color: #F9CCCC;\n      }\n      .dp1 .myDpCurrMonth,\n      .dp1 .myDpMonthcell,\n      .dp1 .myDpYearcell {\n          color: #B22222;\n          font-weight: bold;\n      }\n      .dp1 .myDpDaycellWeekNbr {\n        color: #B22222;\n      }\n      .dp1 .myDpPrevMonth,\n      .dp1 .myDpNextMonth {\n          color: #F08080;\n      }\n      .dp1 .myDpWeekDayTitle {\n        background-color: transparent;\n        color: #B22222;\n        font-weight: bold;\n      }\n      .dp1 .myDpHeaderBtnEnabled:hover,\n      .dp1 .myDpMonthLabel:hover,\n      .dp1 .myDpYearLabel:hover,\n      .dp1 .myDpFooterBtn:hover {\n          color: #F08080;\n      }\n      .dp1 .myDpMarkCurrDay,\n      .dp1 .myDpMarkCurrMonth,\n      .dp1 .myDpMarkCurrYear {\n          border-bottom: 2px solid #800000;\n      }\n      .dp1 .myDpDisabled {\n          color: #999;\n      }\n      .dp1 .myDpHighlight {\n          color: #FF0000;\n      }\n      .dp1 .myDpTableSingleDay:hover,\n      .dp1 .myDpTableSingleMonth:hover,\n      .dp1 .myDpTableSingleYear:hover {\n          background-color: #F6B2B2;\n          color: #800000;\n      }\n      .dp1 .myDpRangeColor {\n        background-color: #FFE1E6;\n      }\n      .dp1 .myDpSelectedDay,\n      .dp1 .myDpSelectedMonth,\n      .dp1 .myDpSelectedYear {\n        background-color: #E6ADAD;\n        color: #800000;\n      }\n    `;\n      } else if (color === 'Yellow') {\n        copy.stylesData.styles = `\n      .dp1 .myDpIconLeftArrow,\n      .dp1 .myDpIconRightArrow,\n      .dp1 .myDpHeaderBtn {\n          color: #DAA520;\n      }\n      .dp1 .myDpHeaderBtn:focus,\n      .dp1 .myDpMonthLabel:focus,\n      .dp1 .myDpYearLabel:focus {\n        color: #FFDAB9;\n      }\n      .dp1 .myDpDaycell:focus,\n      .dp1 .myDpMonthcell:focus,\n      .dp1 .myDpYearcell:focus {\n        box-shadow: inset 0 0 0 1px #F4A460;\n      }\n      .dp1 .myDpSelector:focus {\n        box-shadow: -1px 1px 6px 0px #FADABF;\n      }\n      .dp1 .myDpSelectorArrow:focus:before {\n        border-bottom-color: #FADABF;\n      }\n      .dp1 .myDpCurrMonth,\n      .dp1 .myDpMonthcell,\n      .dp1 .myDpYearcell {\n          color: #DAA520;\n          font-weight: bold;\n      }\n      .dp1 .myDpDaycellWeekNbr {\n        color: #DAA520;\n      }\n      .dp1 .myDpPrevMonth,\n      .dp1 .myDpNextMonth {\n          color: #DEB887;\n      }\n      .dp1 .myDpWeekDayTitle {\n        background-color: transparent;\n        color: #DAA520;\n        font-weight: bold;\n      }\n      .dp1 .myDpHeaderBtnEnabled:hover,\n      .dp1 .myDpMonthLabel:hover,\n      .dp1 .myDpYearLabel:hover,\n      .dp1 .myDpFooterBtn:hover {\n          color: #F0E68C;\n      }\n      .dp1 .myDpMarkCurrDay,\n      .dp1 .myDpMarkCurrMonth,\n      .dp1 .myDpMarkCurrYear {\n          border-bottom: 2px solid #DAA520;\n      }\n      .dp1 .myDpDisabled {\n          color: #999;\n      }\n      .dp1 .myDpTableSingleDay:hover,\n      .dp1 .myDpTableSingleMonth:hover,\n      .dp1 .myDpTableSingleYear:hover {\n          background-color: #F0E68C;\n          color: #DAA520;\n      }\n      .dp1 .myDpRangeColor {\n        background-color: #FFF1DC;\n      }\n      .dp1 .myDpSelectedDay,\n      .dp1 .myDpSelectedMonth,\n      .dp1 .myDpSelectedYear {\n        background-color: #F0E68C;\n        color: #B8860B;\n      }\n    `;\n      } else if (color === 'Dark') {\n        copy.stylesData.styles = `\n      .dp1 .myDpIconLeftArrow,\n      .dp1 .myDpIconRightArrow,\n      .dp1 .myDpHeaderBtn {\n          color: #fff;\n      }\n      .dp1 .myDpHeaderBtn:focus,\n      .dp1 .myDpMonthLabel:focus,\n      .dp1 .myDpYearLabel:focus {\n        color: #66afe9;\n      }\n      .dp1 .myDpDaycell:focus,\n      .dp1 .myDpMonthcell:focus,\n      .dp1 .myDpYearcell:focus {\n        box-shadow: inset 0 0 0 1px #66afe9;\n      }\n      .dp1 .myDpSelector:focus {\n        box-shadow: -1px 1px 6px 0px #ADD8E6;\n      }\n      .dp1 .myDpSelectorArrow:after {\n        border-color: rgba(108, 117, 125, 0);\n        border-bottom-color: #6c757d;\n      }\n      .dp1 .myDpSelectorArrow:focus:before {\n        border-bottom-color: #ADD8E6;\n      }\n      .dp1 .myDpCurrMonth,\n      .dp1 .myDpMonthcell,\n      .dp1 .myDpYearcell {\n          color: #fff;\n          font-weight: bold;\n      }\n      .dp1 .myDpDaycellWeekNbr {\n        color: #fff;\n        background-color: #6c757d;\n      }\n      .dp1 .myDpPrevMonth,\n      .dp1 .myDpNextMonth {\n          color: #bbb;\n      }\n      .dp1 .myDpWeekDayTitle {\n        background-color: #6c757d;\n        color: #fff;\n        font-weight: bold;\n      }\n      .dp1 .myDpHeaderBtnEnabled:hover,\n      .dp1 .myDpMonthLabel:hover,\n      .dp1 .myDpYearLabel:hover,\n      .dp1 .myDpFooterBtn:hover {\n          color: #ddd;\n      }\n      .dp1 .myDpMarkCurrDay,\n      .dp1 .myDpMarkCurrMonth,\n      .dp1 .myDpMarkCurrYear {\n          border-bottom: 2px solid #fff;\n      }\n      .dp1 .myDpDisabled {\n          color: #fff;\n          background: repeating-linear-gradient(-45deg, #6c757d 7px, #d3d3d3 8px, transparent 7px, transparent 14px);\n      }\n      .dp1 .myDpHighlight {\n        color: \t#960018;\n      }\n      .dp1 .myDpTableSingleDay:hover,\n      .dp1 .myDpTableSingleMonth:hover,\n      .dp1 .myDpTableSingleYear:hover {\n          background-color: #ddd;\n          color: #000;\n          font-weight: bold;\n      }\n      .dp1 .myDpDaycell,\n      .dp1 .myDpMonthcell,\n      .dp1 .myDpYearcell {\n        background-color: #6c757d;\n      }\n      .dp1 .myDpRangeColor {\n        background-color: #aaa;\n        color: #fff;\n      }\n      .dp1 .myDpSelectedDay,\n      .dp1 .myDpSelectedMonth,\n      .dp1 .myDpSelectedYear {\n        background-color: #aaa;\n        color: #fff;\n        font-weight: bold;\n        box-shadow: inset 0 0 0 1px #fff;\n      }\n      .dp1 .myDpSelector,\n      .dp1 .myDpMonthYearSelBar,\n      .dp1 .myDpFooterBar {\n        background-color: #6c757d;\n      }\n    `;\n      } else if (color === 'Bold') {\n        copy.stylesData.styles = `\n      .dp1 .myDpHeaderBtn {\n        font-size: 20px;\n        font-weight: bold;\n        color: #191aa5;\n      }\n      .dp1 .myDpWeekDayTitle {\n        font-size: 16px;\n        font-weight: bold;\n        color: #191aa5;\n      }\n      .dp1 .myDpCurrMonth,\n      .dp1 .myDpMonthcell,\n      .dp1 .myDpYearcell {\n        font-size: 18px;\n        font-weight: bold;\n        color: #191aa5;\n      }\n      .dp1 .myDpPrevMonth,\n      .dp1 .myDpNextMonth {\n        color: cornflowerblue;\n        font-weight: bold;\n      }\n      .dp1 .myDpMonthNbr {\n        font-size: 14px;\n      }\n      .dp1 .myDpMarkCurrDay,\n      .dp1 .myDpMarkCurrMonth,\n      .dp1 .myDpMarkCurrYear {\n        border-bottom: 2px solid #191aa5;\n      }\n      .dp1 .myDpDisabled {\n        color: #999;\n      }\n\n      .dp1 .myDpHeaderBtn:focus,\n      .dp1 .myDpMonthLabel:focus,\n      .dp1 .myDpYearLabel:focus {\n        color: #FFDAB9;\n      }\n      .dp1 .myDpDaycell:focus,\n      .dp1 .myDpMonthcell:focus,\n      .dp1 .myDpYearcell:focus {\n        box-shadow: inset 0 0 0 1px #F4A460;\n      }\n      .dp1 .myDpSelector:focus {\n        box-shadow: -1px 1px 6px 0px #FADABF;\n      }\n      .dp1 .myDpSelectorArrow:focus:before {\n        border-bottom-color: #FADABF;\n      }\n      .dp1 .myDpHeaderBtnEnabled:hover,\n      .dp1 .myDpMonthLabel:hover,\n      .dp1 .myDpYearLabel:hover,\n      .dp1 .myDpFooterBtn:hover {\n          color: #F0E68C;\n      }\n      .dp1 .myDpTableSingleDay:hover,\n      .dp1 .myDpTableSingleMonth:hover,\n      .dp1 .myDpTableSingleYear:hover {\n          background-color: #F0E68C;\n          color: #113B08;\n      }\n      `;\n        copy.selectorHeight = '300px';\n        copy.selectorWidth = '300px';\n      }\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onDefaultView(size) {\n      let copy = this.getCopyOfOptions();\n      if (size === 'date') {\n        copy.defaultView = DefaultView.Date;\n      } else if (size === 'month') {\n        copy.defaultView = DefaultView.Month;\n      } else {\n        copy.defaultView = DefaultView.Year;\n      }\n      this.myGregorianDatePickerOptions = copy;\n    }\n    onChangeLocale(locale) {\n      this.locale = locale.split(' | ')[0];\n    }\n    onChangeCalendar(calendar) {\n      this.calendar = calendar;\n      this.myGregorianDatePickerOptions = this.config.getDefaultConfig(this.calendar);\n    }\n    getCopyOfOptions() {\n      return JSON.parse(JSON.stringify(this.myGregorianDatePickerOptions));\n    }\n    ngOnInit() {\n      console.log('onInit(): SampleDatePickerNgModel');\n    }\n    // callbacks\n    onDateChanged(event) {\n      console.log('onDateChanged(): ', event);\n      if (!event.isRange) {\n        let {\n          date,\n          jsDate,\n          formatted,\n          epoc\n        } = event.singleDate;\n        if (formatted !== '') {\n          this.selectedTextNormal = 'Formatted: ' + formatted + ' - epoc timestamp: ' + epoc;\n          this.validDate = true;\n          this.inputText = formatted;\n        } else {\n          this.selectedTextNormal = '';\n        }\n      } else {\n        let {\n          formatted\n        } = event.dateRange;\n        if (formatted !== '') {\n          this.selectedTextNormal = 'Formatted: ' + formatted;\n          this.validDate = true;\n          this.inputText = formatted;\n        } else {\n          this.selectedTextNormal = '';\n        }\n      }\n    }\n    onInputFieldChanged(event) {\n      console.log('onInputFieldChanged(): Value: ', event.value, ' - dateFormat: ', event.dateFormat, ' - valid: ', event.valid);\n      this.validDate = event.valid;\n      this.inputText = event.value;\n    }\n    onCalendarToggle(event) {\n      console.log('onCalendarToggle(): Reason: ', event);\n    }\n    onCalendarViewChanged(event) {\n      console.log('onCalendarViewChanged(): Year: ', event.year, ' - month: ', event.month, ' - first: ', event.first, ' - last: ', event.last);\n    }\n    onRangeDateSelection(event) {\n      console.log('onRangeDateSelection(): event: ', event);\n      /*\n          let {isBegin, date, jsDate} = event;\n      \n          let options: IAngularMyDpOptions = this.getCopyOfOptions();\n          if(isBegin) {\n              // start date selection - set disable since (selected date + 7 days)\n              this.ngxdp.writeValue({\n                isRange: true,\n                singleDate: null,\n                dateRange: {\n                  beginDate: {year: 0, month: 0, day: 0},\n                  endDate: {year: 0, month: 0, day: 0}\n                }\n              });\n      \n              this.ngxdp.setHostValue(\"\");\n      \n              let d = new Date(jsDate.getTime());\n              d.setDate(d.getDate() + 7);\n      \n              options.disableSince = {year: d.getFullYear(), month: d.getMonth() + 1, day: d.getDate()};\n              this.myGregorianDatePickerOptions = options;\n      \n              this.defMonth = {\n                defMonth: date.month + '.' + date.year,\n                overrideSelection: true\n              };\n          }\n          else {\n              // end date selection - remove disableSince option\n              options.disableSince = {year: 0, month: 0, day: 0};\n              this.myGregorianDatePickerOptions = options;\n      \n              let d: Date = new Date();\n      \n              let month: any = d.getMonth() + 1;\n              if (month < 10) {\n                month = '0' + month;\n              }\n      \n              this.defMonth = {\n                defMonth: month + '.' + d.getFullYear(),\n                overrideSelection: false\n              };\n          }\n      */\n    }\n    onViewActivated(event) {\n      console.log('onViewActivated(): event: ', event);\n    }\n    static #_ = this.ɵfac = function DatePickerNgmodel_Factory(t) {\n      return new (t || DatePickerNgmodel)(i0.ɵɵdirectiveInject(i1.DefaultConfigService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DatePickerNgmodel,\n      selectors: [[\"date-picker-ngmodel\"]],\n      viewQuery: function DatePickerNgmodel_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ngxdp = _t.first);\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([DefaultConfigService])],\n      decls: 243,\n      vars: 46,\n      consts: [[1, \"settingstable\"], [2, \"margin-right\", \"10px\"], [2, \"padding\", \"2px\", \"cursor\", \"pointer\", \"font-size\", \"11px\", \"min-width\", \"60px\", 3, \"change\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 2, \"cursor\", \"pointer\", 3, \"checked\", \"change\"], [1, \"buttondiv\"], [\"type\", \"button\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"pickertable\"], [1, \"input-group\", \"inputGroup\"], [\"angular-mydatepicker\", \"\", \"name\", \"mydateG\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"placeholder\", \"ngModel\", \"options\", \"defaultMonth\", \"ngModelChange\", \"dateChanged\", \"calendarViewChanged\", \"calendarToggle\", \"inputFieldChanged\", \"rangeDateSelection\", \"viewActivated\"], [\"dp\", \"angular-mydatepicker\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"fa\", \"fa-close\"], [1, \"fa\", \"fa-calendar-o\"], [\"angular-mydatepicker\", \"\", \"name\", \"mydateJ\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"placeholder\", \"ngModel\", \"options\", \"defaultMonth\", \"ngModelChange\", \"dateChanged\", \"calendarViewChanged\", \"calendarToggle\", \"inputFieldChanged\", \"rangeDateSelection\", \"viewActivated\"], [\"class\", \"border\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"border\", 3, \"ngClass\"], [4, \"ngIf\"]],\n      template: function DatePickerNgmodel_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r17 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\")(1, \"table\", 0)(2, \"tr\")(3, \"td\")(4, \"span\", 1);\n          i0.ɵɵtext(5, \"Calendar:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"span\")(7, \"select\", 2);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_select_change_7_listener($event) {\n            return ctx.onChangeCalendar($event.target.value);\n          });\n          i0.ɵɵtemplate(8, DatePickerNgmodel_option_8_Template, 2, 1, \"option\", 3);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(9, \"td\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"tr\")(11, \"td\")(12, \"span\", 1);\n          i0.ɵɵtext(13, \"Locale:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"span\")(15, \"select\", 2);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_select_change_15_listener($event) {\n            return ctx.onChangeLocale($event.target.value);\n          });\n          i0.ɵɵtemplate(16, DatePickerNgmodel_option_16_Template, 2, 1, \"option\", 3);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(17, \"td\")(18, \"label\")(19, \"span\");\n          i0.ɵɵtext(20, \"Open selector top of input field:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_21_listener($event) {\n            return ctx.onOpenSelectorTopOfInput($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(22, \"tr\")(23, \"td\")(24, \"label\")(25, \"span\");\n          i0.ɵɵtext(26, \"Align selector right:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_27_listener($event) {\n            return ctx.onAlignSelectorRight($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(28, \"td\")(29, \"label\")(30, \"span\");\n          i0.ɵɵtext(31, \"Show selector arrow:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_32_listener($event) {\n            return ctx.onShowSelectorArrow($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(33, \"tr\")(34, \"td\")(35, \"label\")(36, \"span\");\n          i0.ɵɵtext(37, \"Month selector:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_38_listener($event) {\n            return ctx.onMonthSelector($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(39, \"td\")(40, \"label\")(41, \"span\");\n          i0.ɵɵtext(42, \"Year selector:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_43_listener($event) {\n            return ctx.onYearSelector($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(44, \"tr\")(45, \"td\")(46, \"label\")(47, \"span\");\n          i0.ɵɵtext(48, \"Disable today:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(49, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_49_listener($event) {\n            return ctx.onDisableToday($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(50, \"td\")(51, \"label\")(52, \"span\");\n          i0.ɵɵtext(53, \"Mark today:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(54, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_54_listener($event) {\n            return ctx.onMarkToday($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(55, \"tr\")(56, \"td\")(57, \"label\")(58, \"span\");\n          i0.ɵɵtext(59, \"Mark weekends:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(60, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_60_listener($event) {\n            return ctx.onMarkWeekends($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(61, \"td\")(62, \"label\")(63, \"span\");\n          i0.ɵɵtext(64, \"Disable weekends:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(65, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_65_listener($event) {\n            return ctx.onDisableWeekends($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(66, \"tr\")(67, \"td\")(68, \"label\")(69, \"span\");\n          i0.ɵɵtext(70, \"Highlight Saturday:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(71, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_71_listener($event) {\n            return ctx.onHighlighSaturday($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(72, \"td\")(73, \"label\")(74, \"span\");\n          i0.ɵɵtext(75, \"Highlight Sunday:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(76, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_76_listener($event) {\n            return ctx.onHighlighSunday($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(77, \"tr\")(78, \"td\")(79, \"label\")(80, \"span\");\n          i0.ɵɵtext(81, \"Highlight dates (today and tomorrow):\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(82, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_82_listener($event) {\n            return ctx.onHighlightDates($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(83, \"td\")(84, \"label\")(85, \"span\");\n          i0.ɵɵtext(86, \"Disable header buttons:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(87, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_87_listener($event) {\n            return ctx.onDisableHeaderButtons($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(88, \"tr\")(89, \"td\")(90, \"label\")(91, \"span\");\n          i0.ɵɵtext(92, \"Show week numbers:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(93, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_93_listener($event) {\n            return ctx.onShowWeekNumbers($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(94, \"td\")(95, \"label\")(96, \"span\");\n          i0.ɵɵtext(97, \"Disable input box:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(98, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_98_listener($event) {\n            return ctx.onDisableInput($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(99, \"tr\")(100, \"td\")(101, \"label\")(102, \"span\");\n          i0.ɵɵtext(103, \"Close selector on date select:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(104, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_104_listener($event) {\n            return ctx.onCloseSelectorOnDateSelect($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(105, \"td\")(106, \"label\")(107, \"span\");\n          i0.ɵɵtext(108, \"Close selector on document click:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(109, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_109_listener($event) {\n            return ctx.onCloseSelectorOnDocumentClick($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(110, \"tr\")(111, \"td\")(112, \"label\")(113, \"span\");\n          i0.ɵɵtext(114, \"Date range:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(115, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_115_listener($event) {\n            return ctx.onDateRange($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(116, \"td\")(117, \"label\")(118, \"span\");\n          i0.ɵɵtext(119, \"Append selector to body:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(120, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_120_listener($event) {\n            return ctx.onAppendSelectorToBody($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(121, \"tr\")(122, \"td\")(123, \"label\")(124, \"span\");\n          i0.ɵɵtext(125, \"Disable Wednesday:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(126, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_126_listener($event) {\n            return ctx.onDisableWednesday($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(127, \"td\")(128, \"label\")(129, \"span\");\n          i0.ɵɵtext(130, \"Disable 24th day of every month:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(131, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_131_listener($event) {\n            return ctx.onDisable24Day($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(132, \"tr\")(133, \"td\")(134, \"label\")(135, \"span\");\n          i0.ɵɵtext(136, \"Focus input box on date select:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(137, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_137_listener($event) {\n            return ctx.onFocusInputOnDateSelect($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(138, \"td\")(139, \"label\")(140, \"span\");\n          i0.ɵɵtext(141, \"RTL:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(142, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_142_listener($event) {\n            return ctx.onRtl($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(143, \"tr\")(144, \"td\")(145, \"label\")(146, \"span\");\n          i0.ɵɵtext(147, \"Disable until yesterday:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(148, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_148_listener($event) {\n            return ctx.onDisableUntilYesterday($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(149, \"td\")(150, \"label\")(151, \"span\");\n          i0.ɵɵtext(152, \"Disable since tomorrow:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(153, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_153_listener($event) {\n            return ctx.onDisableSinceTomorrow($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(154, \"tr\")(155, \"td\")(156, \"label\")(157, \"span\");\n          i0.ɵɵtext(158, \"Show month number:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(159, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_159_listener($event) {\n            return ctx.onShowMonthNumber($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(160, \"td\")(161, \"label\")(162, \"span\");\n          i0.ɵɵtext(163, \"Show footer bar:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(164, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_164_listener($event) {\n            return ctx.onShowFooterBar($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(165, \"tr\")(166, \"td\")(167, \"label\")(168, \"span\");\n          i0.ɵɵtext(169, \"Disable +-1 today (own style):\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(170, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_170_listener($event) {\n            return ctx.onDisableOwnStyle($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(171, \"td\")(172, \"label\")(173, \"span\");\n          i0.ɵɵtext(174, \"Mark day after tomorrow + 2 (own style):\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(175, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_input_change_175_listener($event) {\n            return ctx.onMarkOwnStyle($event.currentTarget.checked);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(176, \"tr\")(177, \"td\")(178, \"label\")(179, \"span\", 1);\n          i0.ɵɵtext(180, \"Default view:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(181, \"span\")(182, \"select\", 2);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_select_change_182_listener($event) {\n            return ctx.onDefaultView($event.target.value);\n          });\n          i0.ɵɵtemplate(183, DatePickerNgmodel_option_183_Template, 2, 1, \"option\", 3);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(184, \"td\")(185, \"label\")(186, \"span\", 1);\n          i0.ɵɵtext(187, \"Selector size:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(188, \"span\")(189, \"select\", 2);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_select_change_189_listener($event) {\n            return ctx.onSelectorSize($event.target.value);\n          });\n          i0.ɵɵtemplate(190, DatePickerNgmodel_option_190_Template, 2, 1, \"option\", 3);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(191, \"tr\")(192, \"td\")(193, \"label\")(194, \"span\", 1);\n          i0.ɵɵtext(195, \"Calendar animation:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(196, \"span\")(197, \"select\", 2);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_select_change_197_listener($event) {\n            return ctx.onCalendarAnimation($event.target.value);\n          });\n          i0.ɵɵtemplate(198, DatePickerNgmodel_option_198_Template, 2, 1, \"option\", 3);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(199, \"td\")(200, \"label\")(201, \"span\", 1);\n          i0.ɵɵtext(202, \"Override styles:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(203, \"span\")(204, \"select\", 2);\n          i0.ɵɵlistener(\"change\", function DatePickerNgmodel_Template_select_change_204_listener($event) {\n            return ctx.onOverrideCalColor($event.target.value);\n          });\n          i0.ɵɵtemplate(205, DatePickerNgmodel_option_205_Template, 2, 1, \"option\", 3);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(206, \"div\", 5)(207, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function DatePickerNgmodel_Template_button_click_207_listener() {\n            i0.ɵɵrestoreView(_r17);\n            const _r6 = i0.ɵɵreference(225);\n            return i0.ɵɵresetView(_r6.toggleCalendar());\n          });\n          i0.ɵɵtext(208, \"Toggle\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(209, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function DatePickerNgmodel_Template_button_click_209_listener() {\n            i0.ɵɵrestoreView(_r17);\n            const _r6 = i0.ɵɵreference(225);\n            return i0.ɵɵresetView(_r6.openCalendar());\n          });\n          i0.ɵɵtext(210, \"Open\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(211, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function DatePickerNgmodel_Template_button_click_211_listener() {\n            i0.ɵɵrestoreView(_r17);\n            const _r6 = i0.ɵɵreference(225);\n            return i0.ɵɵresetView(_r6.closeCalendar());\n          });\n          i0.ɵɵtext(212, \"Close\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(213, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function DatePickerNgmodel_Template_button_click_213_listener() {\n            return ctx.clearDate();\n          });\n          i0.ɵɵtext(214, \"Clear\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(215, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function DatePickerNgmodel_Template_button_click_215_listener() {\n            return ctx.setDate();\n          });\n          i0.ɵɵtext(216, \"Set date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(217, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function DatePickerNgmodel_Template_button_click_217_listener() {\n            return ctx.setDateRange();\n          });\n          i0.ɵɵtext(218, \"Set date range\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(219, \"table\", 7)(220, \"tr\")(221, \"td\")(222, \"form\")(223, \"div\", 8)(224, \"input\", 9, 10);\n          i0.ɵɵlistener(\"ngModelChange\", function DatePickerNgmodel_Template_input_ngModelChange_224_listener($event) {\n            return ctx.model = $event;\n          })(\"dateChanged\", function DatePickerNgmodel_Template_input_dateChanged_224_listener($event) {\n            return ctx.onDateChanged($event);\n          })(\"calendarViewChanged\", function DatePickerNgmodel_Template_input_calendarViewChanged_224_listener($event) {\n            return ctx.onCalendarViewChanged($event);\n          })(\"calendarToggle\", function DatePickerNgmodel_Template_input_calendarToggle_224_listener($event) {\n            return ctx.onCalendarToggle($event);\n          })(\"inputFieldChanged\", function DatePickerNgmodel_Template_input_inputFieldChanged_224_listener($event) {\n            return ctx.onInputFieldChanged($event);\n          })(\"rangeDateSelection\", function DatePickerNgmodel_Template_input_rangeDateSelection_224_listener($event) {\n            return ctx.onRangeDateSelection($event);\n          })(\"viewActivated\", function DatePickerNgmodel_Template_input_viewActivated_224_listener($event) {\n            return ctx.onViewActivated($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(226, \"div\", 11)(227, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function DatePickerNgmodel_Template_button_click_227_listener() {\n            i0.ɵɵrestoreView(_r17);\n            const _r6 = i0.ɵɵreference(225);\n            return i0.ɵɵresetView(_r6.clearDate());\n          });\n          i0.ɵɵelement(228, \"i\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(229, \"div\", 11)(230, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function DatePickerNgmodel_Template_button_click_230_listener() {\n            i0.ɵɵrestoreView(_r17);\n            const _r6 = i0.ɵɵreference(225);\n            return i0.ɵɵresetView(_r6.toggleCalendar());\n          });\n          i0.ɵɵelement(231, \"i\", 14);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(232, \"div\", 8)(233, \"input\", 15, 10);\n          i0.ɵɵlistener(\"ngModelChange\", function DatePickerNgmodel_Template_input_ngModelChange_233_listener($event) {\n            return ctx.model = $event;\n          })(\"dateChanged\", function DatePickerNgmodel_Template_input_dateChanged_233_listener($event) {\n            return ctx.onDateChanged($event);\n          })(\"calendarViewChanged\", function DatePickerNgmodel_Template_input_calendarViewChanged_233_listener($event) {\n            return ctx.onCalendarViewChanged($event);\n          })(\"calendarToggle\", function DatePickerNgmodel_Template_input_calendarToggle_233_listener($event) {\n            return ctx.onCalendarToggle($event);\n          })(\"inputFieldChanged\", function DatePickerNgmodel_Template_input_inputFieldChanged_233_listener($event) {\n            return ctx.onInputFieldChanged($event);\n          })(\"rangeDateSelection\", function DatePickerNgmodel_Template_input_rangeDateSelection_233_listener($event) {\n            return ctx.onRangeDateSelection($event);\n          })(\"viewActivated\", function DatePickerNgmodel_Template_input_viewActivated_233_listener($event) {\n            return ctx.onViewActivated($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(235, \"div\", 11)(236, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function DatePickerNgmodel_Template_button_click_236_listener() {\n            i0.ɵɵrestoreView(_r17);\n            const _r6 = i0.ɵɵreference(225);\n            return i0.ɵɵresetView(_r6.clearDate());\n          });\n          i0.ɵɵelement(237, \"i\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(238, \"div\", 11)(239, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function DatePickerNgmodel_Template_button_click_239_listener() {\n            i0.ɵɵrestoreView(_r17);\n            const _r6 = i0.ɵɵreference(225);\n            return i0.ɵɵresetView(_r6.toggleCalendar());\n          });\n          i0.ɵɵelement(240, \"i\", 14);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(241, \"td\");\n          i0.ɵɵtemplate(242, DatePickerNgmodel_div_242_Template, 3, 6, \"div\", 16);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", ctx.calendars);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", ctx.locales);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"checked\", false);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", ctx.defaultViews);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.selectorSizes);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", ctx.calAnimations);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.styleColor);\n          i0.ɵɵadvance(19);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", !ctx.myGregorianDatePickerOptions.dateRange ? \"Select a date\" : \"Select a date range\");\n          i0.ɵɵproperty(\"ngModel\", ctx.model)(\"options\", ctx.myGregorianDatePickerOptions)(\"defaultMonth\", ctx.defMonth);\n          i0.ɵɵattribute(\"disabled\", ctx.disabled ? \"\" : null);\n          i0.ɵɵadvance(9);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", !ctx.myJalaliDatePickerOptions.dateRange ? \"Select a date\" : \"Select a date range\");\n          i0.ɵɵproperty(\"ngModel\", ctx.model)(\"options\", ctx.myJalaliDatePickerOptions)(\"defaultMonth\", ctx.defMonth);\n          i0.ɵɵattribute(\"disabled\", ctx.disabled ? \"\" : null);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", ctx.inputText !== \"\");\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.AngularMyDatePickerDirective],\n      styles: [\".settingstable[_ngcontent-%COMP%], .pickertable[_ngcontent-%COMP%]{width:100%;border:none}.settingstable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{width:50%;border:none}.pickertable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{vertical-align:top}.pickertable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child{width:290px}.pickertable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:last-child{width:calc(100% - 260px);padding-left:20px}.border[_ngcontent-%COMP%]{padding:4px;border-radius:4px;float:right;width:100%}.buttondiv[_ngcontent-%COMP%]{margin:15px 0}.okDate[_ngcontent-%COMP%]{color:#3c764d;background-color:#dff0d6;border:1px solid #d6e9c2}.invalidDate[_ngcontent-%COMP%]{color:#a94444;background-color:#f1dede;border:1px solid #ebccd2}.inputGroup[_ngcontent-%COMP%]{width:266px}\"]\n    });\n  }\n  return DatePickerNgmodel;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}