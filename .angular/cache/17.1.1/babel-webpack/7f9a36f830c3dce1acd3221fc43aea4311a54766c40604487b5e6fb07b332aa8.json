{"ast":null,"code":"import { ElementRef, Renderer2, ChangeDetectorRef } from \"@angular/core\";\nimport { UtilService } from \"../../services/angular-mydatepicker.util.service\";\nimport { KeyCode } from \"../../enums/key-code.enum\";\nimport { MonthId } from \"../../enums/month-id.enum\";\nimport { DefaultView } from \"../../enums/default-view.enum\";\nimport { CalAnimation } from \"../../enums/cal-animation.enum\";\nimport { HeaderAction } from \"../../enums/header-action.enum\";\nimport { DOT, UNDER_LINE, D, M, Y, DATE_ROW_COUNT, DATE_COL_COUNT, MONTH_ROW_COUNT, MONTH_COL_COUNT, YEAR_ROW_COUNT, YEAR_COL_COUNT, SU, MO, TU, WE, TH, FR, SA, EMPTY_STR, CLICK, STYLE, MY_DP_ANIMATION, ANIMATION_NAMES, IN, OUT, TABINDEX, TD_SELECTOR, ZERO_STR, YEAR_SEPARATOR } from \"../../constants/constants\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/angular-mydatepicker.util.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../selection-bar/selection-bar.component\";\nimport * as i4 from \"../day-view/day-view.component\";\nimport * as i5 from \"../month-view/month-view.component\";\nimport * as i6 from \"../year-view/year-view.component\";\nimport * as i7 from \"../footer-bar/footer-bar.component\";\nimport * as i8 from \"../../directives/angular-mydatepicker-calendar.directive\";\nconst _c0 = [\"selectorEl\"];\nconst _c1 = [\"styleEl\"];\nfunction CalendarComponent_lib_day_view_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"lib-day-view\", 8);\n    i0.ɵɵlistener(\"dayCellClicked\", function CalendarComponent_lib_day_view_6_Template_lib_day_view_dayCellClicked_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onDayCellClicked($event));\n    })(\"dayCellKeyDown\", function CalendarComponent_lib_day_view_6_Template_lib_day_view_dayCellKeyDown_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onDayCellKeyDown($event));\n    })(\"viewActivated\", function CalendarComponent_lib_day_view_6_Template_lib_day_view_viewActivated_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onViewActivated($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"opts\", ctx_r2.opts)(\"dates\", ctx_r2.dates)(\"weekDays\", ctx_r2.weekDays)(\"selectedDate\", ctx_r2.selectedDate)(\"selectedDateRange\", ctx_r2.selectedDateRange)(\"viewChanged\", ctx_r2.viewChanged);\n  }\n}\nfunction CalendarComponent_lib_month_view_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"lib-month-view\", 9);\n    i0.ɵɵlistener(\"monthCellClicked\", function CalendarComponent_lib_month_view_7_Template_lib_month_view_monthCellClicked_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onMonthCellClicked($event));\n    })(\"monthCellKeyDown\", function CalendarComponent_lib_month_view_7_Template_lib_month_view_monthCellKeyDown_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onMonthCellKeyDown($event));\n    })(\"viewActivated\", function CalendarComponent_lib_month_view_7_Template_lib_month_view_viewActivated_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onViewActivated($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"opts\", ctx_r3.opts)(\"months\", ctx_r3.months)(\"viewChanged\", ctx_r3.viewChanged);\n  }\n}\nfunction CalendarComponent_lib_year_view_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"lib-year-view\", 10);\n    i0.ɵɵlistener(\"yearCellClicked\", function CalendarComponent_lib_year_view_8_Template_lib_year_view_yearCellClicked_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onYearCellClicked($event));\n    })(\"yearCellKeyDown\", function CalendarComponent_lib_year_view_8_Template_lib_year_view_yearCellKeyDown_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onYearCellKeyDown($event));\n    })(\"viewActivated\", function CalendarComponent_lib_year_view_8_Template_lib_year_view_viewActivated_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onViewActivated($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"opts\", ctx_r4.opts)(\"years\", ctx_r4.years)(\"viewChanged\", ctx_r4.viewChanged);\n  }\n}\nfunction CalendarComponent_lib_footer_bar_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"lib-footer-bar\", 11);\n    i0.ɵɵlistener(\"footerBarTxtClicked\", function CalendarComponent_lib_footer_bar_9_Template_lib_footer_bar_footerBarTxtClicked_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.onTodayFooterClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"opts\", ctx_r5.opts);\n  }\n}\nconst _c2 = (a0, a1, a2, a3) => ({\n  inline: a0,\n  selectorWidth: a1,\n  selectorHeight: a2,\n  selectorPos: a3\n});\nconst _c3 = (a0, a1, a2, a3, a4) => ({\n  \"myDpSelectorArrow\": a0,\n  \"myDpSelectorArrowLeft\": a1,\n  \"myDpSelectorArrowRight\": a2,\n  \"myDpSelectorAbsolute\": a3,\n  \"myDpSelectorPosInitial\": a4\n});\nexport let CalendarComponent = /*#__PURE__*/(() => {\n  class CalendarComponent {\n    constructor(elem, renderer, cdr, utilService) {\n      this.elem = elem;\n      this.renderer = renderer;\n      this.cdr = cdr;\n      this.utilService = utilService;\n      this.position = \"static\";\n      this.visibleMonth = {\n        monthTxt: EMPTY_STR,\n        monthNbr: 0,\n        year: 0\n      };\n      this.selectedMonth = {\n        monthNbr: 0,\n        year: 0\n      };\n      this.selectedDate = {\n        year: 0,\n        month: 0,\n        day: 0\n      };\n      this.selectedDateRange = {\n        begin: {\n          year: 0,\n          month: 0,\n          day: 0\n        },\n        end: {\n          year: 0,\n          month: 0,\n          day: 0\n        }\n      };\n      this.weekDays = [];\n      this.dates = [];\n      this.months = [];\n      this.years = [];\n      this.yearsDuration = \"\";\n      this.dayIdx = 0;\n      this.weekDayOpts = [SU, MO, TU, WE, TH, FR, SA];\n      this.selectMonth = false;\n      this.selectYear = false;\n      this.viewChanged = false;\n      this.selectorPos = null;\n      this.prevViewDisabled = false;\n      this.nextViewDisabled = false;\n      this.clickListener = renderer.listen(elem.nativeElement, CLICK, event => {\n        if ((this.opts.monthSelector || this.opts.yearSelector) && event.target) {\n          this.resetMonthYearSelect();\n        }\n      });\n    }\n    ngAfterViewInit() {\n      const {\n        stylesData,\n        calendarAnimation,\n        inline\n      } = this.opts;\n      if (stylesData.styles.length) {\n        const styleElTemp = this.renderer.createElement(STYLE);\n        this.renderer.appendChild(styleElTemp, this.renderer.createText(stylesData.styles));\n        this.renderer.appendChild(this.styleEl.nativeElement, styleElTemp);\n      }\n      if (calendarAnimation.in !== CalAnimation.None) {\n        this.setCalendarAnimation(calendarAnimation, true);\n      }\n      if (!inline) {\n        this.focusToSelector();\n      }\n    }\n    ngOnDestroy() {\n      this.clickListener();\n    }\n    initializeComponent(opts, defaultMonth, selectedValue, inputValue, selectorPos, dc, cvc, rds, va, cbe) {\n      this.opts = opts;\n      this.selectorPos = selectorPos;\n      this.dateChanged = dc;\n      this.calendarViewChanged = cvc;\n      this.rangeDateSelection = rds;\n      this.viewActivated = va;\n      this.closedByEsc = cbe;\n      const {\n        defaultView,\n        firstDayOfWeek,\n        dayLabels\n      } = opts;\n      this.weekDays.length = 0;\n      this.dayIdx = this.weekDayOpts.indexOf(firstDayOfWeek);\n      if (this.dayIdx !== -1) {\n        let idx = this.dayIdx;\n        for (let i = 0; i < this.weekDayOpts.length; i++) {\n          this.weekDays.push(dayLabels[this.weekDayOpts[idx]]);\n          idx = this.weekDayOpts[idx] === SA ? 0 : idx + 1;\n        }\n      }\n      this.initializeView(defaultMonth, selectedValue, inputValue);\n      this.setCalendarVisibleMonth();\n      this.setDefaultView(defaultView);\n    }\n    initializeView(defaultMonth, selectedValue, inputValue) {\n      const {\n        dateRange\n      } = this.opts;\n      // use today as a selected month\n      const today = this.utilService.getToday(this.opts.calendarType);\n      this.selectedMonth = {\n        monthNbr: today.month,\n        year: today.year\n      };\n      // If default month attribute valur given use it as a selected month\n      const {\n        defMonth,\n        overrideSelection\n      } = defaultMonth;\n      if (defMonth && defMonth.length) {\n        this.selectedMonth = this.utilService.parseDefaultMonth(this.opts.calendarType, defMonth);\n      }\n      let validateOpts;\n      if (!dateRange) {\n        // Single date mode - If date selected use it as selected month\n        validateOpts = {\n          validateDisabledDates: false,\n          selectedValue: this.utilService.getSelectedValue(this.opts.calendarType, selectedValue, dateRange)\n        };\n        const date = this.utilService.isDateValid(this.opts.calendarType, inputValue, this.opts, validateOpts);\n        if (this.utilService.isInitializedDate(this.opts.calendarType, date)) {\n          this.selectedDate = date;\n          if (!overrideSelection) {\n            this.selectedMonth = {\n              monthNbr: date.month,\n              year: date.year\n            };\n          }\n        }\n      } else {\n        // Date range mode - If date range selected use begin date as selected month\n        validateOpts = {\n          validateDisabledDates: false,\n          selectedValue: this.utilService.getSelectedValue(this.opts.calendarType, selectedValue, dateRange)\n        };\n        const {\n          begin,\n          end\n        } = this.utilService.isDateValidDateRange(this.opts.calendarType, inputValue, this.opts, validateOpts);\n        if (this.utilService.isInitializedDate(this.opts.calendarType, begin) && this.utilService.isInitializedDate(this.opts.calendarType, end)) {\n          this.selectedDateRange = {\n            begin,\n            end\n          };\n          if (!overrideSelection) {\n            this.selectedMonth = {\n              monthNbr: begin.month,\n              year: begin.year\n            };\n          }\n        }\n      }\n    }\n    refreshComponent(opts, defaultMonth, selectedValue, inputValue) {\n      this.opts = opts;\n      const {\n        defaultView\n      } = opts;\n      this.initializeView(defaultMonth, selectedValue, inputValue);\n      this.setCalendarVisibleMonth();\n      this.setDefaultView(defaultView);\n    }\n    headerAction(headerAction) {\n      const {\n        monthSelector,\n        yearSelector\n      } = this.opts;\n      if (headerAction === HeaderAction.PrevBtnClick) {\n        if (!this.prevViewDisabled) {\n          this.onPrevNavigateBtnClicked();\n        }\n      } else if (headerAction === HeaderAction.NextBtnClick) {\n        if (!this.nextViewDisabled) {\n          this.onNextNavigateBtnClicked();\n        }\n      } else if (headerAction === HeaderAction.MonthBtnClick) {\n        if (monthSelector) {\n          this.onMonthViewBtnClicked();\n        }\n      } else if (headerAction === HeaderAction.YearBtnClick) {\n        if (yearSelector) {\n          this.onYearViewBtnClicked();\n        }\n      }\n    }\n    setDefaultView(defaultView) {\n      if (defaultView === DefaultView.Month) {\n        this.monthViewBtnClicked();\n      } else if (defaultView === DefaultView.Year) {\n        this.yearViewBtnClicked();\n      }\n    }\n    setCalendarAnimation(calAnimation, isOpen) {\n      const {\n        nativeElement\n      } = this.selectorEl;\n      const {\n        renderer\n      } = this;\n      const classIn = MY_DP_ANIMATION + ANIMATION_NAMES[calAnimation.in - 1];\n      if (isOpen) {\n        renderer.addClass(nativeElement, classIn + IN);\n      } else {\n        const classOut = MY_DP_ANIMATION + ANIMATION_NAMES[calAnimation.out - 1];\n        renderer.removeClass(nativeElement, classIn + IN);\n        renderer.addClass(nativeElement, classOut + OUT);\n      }\n    }\n    resetDateValue() {\n      if (!this.opts.dateRange) {\n        this.selectedDate = this.utilService.resetDate(this.opts.calendarType);\n      } else {\n        this.selectedDateRange.begin = this.utilService.resetDate(this.opts.calendarType);\n        this.selectedDateRange.end = this.utilService.resetDate(this.opts.calendarType);\n      }\n    }\n    clearDate() {\n      const {\n        month,\n        year\n      } = this.utilService.getToday(this.opts.calendarType);\n      this.selectedMonth = {\n        monthNbr: month,\n        year: year\n      };\n      this.resetDateValue();\n      this.setCalendarVisibleMonth();\n      this.resetMonthYearSelect();\n    }\n    resetMonthYearSelect() {\n      this.selectMonth = false;\n      this.selectYear = false;\n    }\n    onMonthViewBtnClicked() {\n      this.viewChanged = true;\n      this.monthViewBtnClicked();\n    }\n    monthViewBtnClicked() {\n      this.selectMonth = !this.selectMonth;\n      this.selectYear = false;\n      this.cdr.detectChanges();\n      if (this.selectMonth) {\n        this.generateMonths();\n      } else {\n        const {\n          year,\n          monthNbr\n        } = this.selectedMonth;\n        this.visibleMonth = {\n          monthTxt: this.opts.monthLabels[monthNbr],\n          monthNbr,\n          year\n        };\n        this.generateCalendar(monthNbr, year, true);\n      }\n    }\n    onMonthCellClicked(cell) {\n      this.viewChanged = true;\n      const {\n        year,\n        monthNbr\n      } = this.visibleMonth;\n      const monthChange = cell.nbr !== monthNbr;\n      this.visibleMonth = {\n        monthTxt: this.opts.monthLabels[cell.nbr],\n        monthNbr: cell.nbr,\n        year\n      };\n      this.selectedMonth.year = year;\n      this.generateCalendar(cell.nbr, year, monthChange);\n      this.selectMonth = false;\n      this.focusToSelector();\n    }\n    onMonthCellKeyDown(event) {\n      // Move focus by arrow keys\n      const {\n        sourceRow,\n        sourceCol\n      } = this.getSourceRowAndColumnFromEvent(event);\n      const {\n        moveFocus,\n        targetRow,\n        targetCol,\n        direction\n      } = this.getTargetFocusRowAndColumn(event, sourceRow, sourceCol, MONTH_ROW_COUNT, MONTH_COL_COUNT);\n      if (moveFocus) {\n        this.focusCellElement(M, targetRow, targetCol, direction, MONTH_COL_COUNT);\n      }\n    }\n    onYearViewBtnClicked() {\n      this.viewChanged = true;\n      this.yearViewBtnClicked();\n    }\n    yearViewBtnClicked() {\n      this.selectYear = !this.selectYear;\n      this.selectMonth = false;\n      this.cdr.detectChanges();\n      if (this.selectYear) {\n        this.generateYears(this.visibleMonth.year);\n      } else {\n        const {\n          year,\n          monthNbr\n        } = this.selectedMonth;\n        this.visibleMonth = {\n          monthTxt: this.opts.monthLabels[monthNbr],\n          monthNbr,\n          year\n        };\n        this.generateCalendar(monthNbr, year, true);\n      }\n    }\n    onYearCellClicked(cell) {\n      this.viewChanged = true;\n      const {\n        year,\n        monthNbr,\n        monthTxt\n      } = this.visibleMonth;\n      const yc = cell.year !== year;\n      this.visibleMonth = {\n        monthTxt,\n        monthNbr,\n        year: cell.year\n      };\n      this.selectedMonth.year = cell.year;\n      this.generateCalendar(monthNbr, cell.year, yc);\n      this.selectYear = false;\n      this.focusToSelector();\n    }\n    onYearCellKeyDown(event) {\n      // Move focus by arrow keys\n      const {\n        sourceRow,\n        sourceCol\n      } = this.getSourceRowAndColumnFromEvent(event);\n      const {\n        moveFocus,\n        targetRow,\n        targetCol,\n        direction\n      } = this.getTargetFocusRowAndColumn(event, sourceRow, sourceCol, YEAR_ROW_COUNT, YEAR_COL_COUNT);\n      if (moveFocus) {\n        this.focusCellElement(Y, targetRow, targetCol, direction, YEAR_COL_COUNT);\n      }\n    }\n    generateMonths() {\n      const today = this.utilService.getToday(this.opts.calendarType);\n      this.months.length = 0;\n      const {\n        year,\n        monthNbr\n      } = this.visibleMonth;\n      const {\n        rtl,\n        monthLabels\n      } = this.opts;\n      let row = 0;\n      for (let i = 1; i <= 12; i += 3) {\n        const rowData = [];\n        let col = rtl ? 2 : 0;\n        for (let j = i; j < i + 3; j++) {\n          const disabled = this.utilService.isDisabledMonth(this.opts.calendarType, year, j, this.opts);\n          rowData.push({\n            nbr: j,\n            year,\n            name: monthLabels[j],\n            currMonth: j === today.month && year === today.year,\n            selected: j === monthNbr && year === this.selectedMonth.year,\n            disabled,\n            row,\n            col: rtl ? col-- : col++\n          });\n        }\n        row++;\n        this.months.push(rowData);\n      }\n      this.setMonthViewHeaderBtnDisabledState(year);\n    }\n    generateYears(inputYear) {\n      const {\n        minYear,\n        maxYear,\n        rtl\n      } = this.opts;\n      let y = inputYear - 12;\n      if (inputYear < minYear) {\n        y = minYear;\n      }\n      if (inputYear + 25 > maxYear) {\n        y = maxYear - 24;\n      }\n      const {\n        year\n      } = this.visibleMonth;\n      this.years.length = 0;\n      const today = this.utilService.getToday(this.opts.calendarType);\n      let row = 0;\n      for (let i = y; i < y + 25; i += 5) {\n        const rowData = [];\n        let col = rtl ? 4 : 0;\n        for (let j = i; j < i + 5; j++) {\n          const disabled = this.utilService.isDisabledYear(this.opts.calendarType, j, this.opts);\n          rowData.push({\n            year: j,\n            currYear: j === today.year,\n            selected: j === year,\n            disabled,\n            row,\n            col: rtl ? col-- : col++\n          });\n        }\n        row++;\n        this.years.push(rowData);\n      }\n      const beginYear = this.getYearValueByRowAndCol(0, 0);\n      const endYear = beginYear + 24;\n      this.yearsDuration = (!rtl ? beginYear : endYear) + YEAR_SEPARATOR + (!rtl ? endYear : beginYear);\n      this.setYearViewHeaderBtnDisabledState(beginYear, endYear);\n    }\n    onTodayFooterClicked() {\n      const date = this.utilService.getToday(this.opts.calendarType);\n      this.selectDate(date);\n    }\n    getYearValueByRowAndCol(row, col) {\n      const {\n        years\n      } = this;\n      if (!years || years.length === 0) {\n        const {\n          year\n        } = this.utilService.getToday(this.opts.calendarType);\n        return year;\n      }\n      return years[row][col].year;\n    }\n    setCalendarVisibleMonth() {\n      // Sets visible month of calendar\n      const {\n        year,\n        monthNbr\n      } = this.selectedMonth;\n      this.visibleMonth = {\n        monthTxt: this.opts.monthLabels[monthNbr],\n        monthNbr,\n        year\n      };\n      // Create current month\n      this.generateCalendar(monthNbr, year, true);\n    }\n    onViewActivated(event) {\n      this.viewActivated(event);\n    }\n    onPrevNavigateBtnClicked() {\n      if (!this.selectMonth && !this.selectYear) {\n        this.setDateViewMonth(false);\n      } else if (this.selectMonth) {\n        this.visibleMonth.year--;\n        this.generateMonths();\n      } else if (this.selectYear) {\n        this.generateYears(this.getYearValueByRowAndCol(2, 2) - 25);\n      }\n    }\n    onNextNavigateBtnClicked() {\n      if (!this.selectMonth && !this.selectYear) {\n        this.setDateViewMonth(true);\n      } else if (this.selectMonth) {\n        this.visibleMonth.year++;\n        this.generateMonths();\n      } else if (this.selectYear) {\n        this.generateYears(this.getYearValueByRowAndCol(2, 2) + 25);\n      }\n    }\n    setDateViewMonth(isNext) {\n      let change = isNext ? 1 : -1;\n      const {\n        year,\n        monthNbr\n      } = this.visibleMonth;\n      const d = this.utilService.getJsDate(this.opts.calendarType, year, monthNbr, 1);\n      d.setMonth(d.getMonth() + change);\n      const y = d.getFullYear();\n      const m = d.getMonth() + 1;\n      this.visibleMonth = {\n        monthTxt: this.opts.monthLabels[m],\n        monthNbr: m,\n        year: y\n      };\n      this.generateCalendar(m, y, true);\n    }\n    onCloseSelector(event) {\n      const keyCode = this.utilService.getKeyCodeFromEvent(this.opts.calendarType, event);\n      if (keyCode === KeyCode.esc) {\n        this.closedByEsc();\n      }\n    }\n    onDayCellClicked(cell) {\n      // Cell clicked on the calendar\n      this.selectDate(cell.dateObj);\n      this.resetMonthYearSelect();\n    }\n    onDayCellKeyDown(event) {\n      // Move focus by arrow keys\n      const {\n        sourceRow,\n        sourceCol\n      } = this.getSourceRowAndColumnFromEvent(event);\n      const {\n        moveFocus,\n        targetRow,\n        targetCol,\n        direction\n      } = this.getTargetFocusRowAndColumn(event, sourceRow, sourceCol, DATE_ROW_COUNT, DATE_COL_COUNT);\n      if (moveFocus) {\n        this.focusCellElement(D, targetRow, targetCol, direction, DATE_COL_COUNT);\n      }\n    }\n    getSourceRowAndColumnFromEvent(event) {\n      let sourceRow = 0;\n      let sourceCol = 0;\n      if (event.target && event.target.id) {\n        // value of id is for example: m_0_1 (first number = row, second number = column)\n        const arr = event.target.id.split(UNDER_LINE);\n        sourceRow = Number(arr[1]);\n        sourceCol = Number(arr[2]);\n      }\n      return {\n        sourceRow,\n        sourceCol\n      };\n    }\n    getTargetFocusRowAndColumn(event, row, col, rowCount, colCount) {\n      let moveFocus = true;\n      let targetRow = row;\n      let targetCol = col;\n      let direction = false;\n      const keyCode = this.utilService.getKeyCodeFromEvent(this.opts.calendarType, event);\n      if (keyCode === KeyCode.upArrow && row > 0) {\n        targetRow--;\n      } else if (keyCode === KeyCode.downArrow && row < rowCount) {\n        targetRow++;\n        direction = true;\n      } else if (keyCode === KeyCode.leftArrow && col > 0) {\n        targetCol--;\n      } else if (keyCode === KeyCode.rightArrow && col < colCount) {\n        targetCol++;\n        direction = true;\n      } else {\n        moveFocus = false;\n      }\n      return {\n        moveFocus,\n        targetRow,\n        targetCol,\n        direction\n      };\n    }\n    focusCellElement(type, row, col, direction, colCount) {\n      const className = type + UNDER_LINE + row + UNDER_LINE + col;\n      let elem = this.selectorEl.nativeElement.querySelector(DOT + className);\n      if (elem.getAttribute(TABINDEX) !== ZERO_STR) {\n        // if the selected element is disabled move a focus to next/previous enabled element\n        let tdList = this.getCalendarElements();\n        const idx = row * (colCount + 1) + col;\n        let enabledElem;\n        if (direction) {\n          // find next enabled\n          enabledElem = tdList.slice(idx).find(td => td.getAttribute(TABINDEX) === ZERO_STR);\n        } else {\n          // find previous enabled\n          enabledElem = tdList.slice(0, idx).reverse().find(td => td.getAttribute(TABINDEX) === ZERO_STR);\n        }\n        elem = enabledElem ? enabledElem : this.selectorEl.nativeElement;\n      } else {\n        elem.focus();\n      }\n    }\n    focusToSelector() {\n      this.selectorEl.nativeElement.focus();\n    }\n    getCalendarElements() {\n      return Array.from(this.selectorEl.nativeElement.querySelectorAll(TD_SELECTOR));\n    }\n    selectDate(date) {\n      const {\n        dateRange,\n        dateFormat,\n        monthLabels,\n        dateRangeDatesDelimiter,\n        closeSelectorOnDateSelect\n      } = this.opts;\n      if (dateRange) {\n        // Date range\n        const isBeginDateInitialized = this.utilService.isInitializedDate(this.opts.calendarType, this.selectedDateRange.begin);\n        const isEndDateInitialized = this.utilService.isInitializedDate(this.opts.calendarType, this.selectedDateRange.end);\n        if (isBeginDateInitialized && isEndDateInitialized) {\n          // both already selected - set begin date and reset end date\n          this.selectedDateRange.begin = date;\n          this.selectedDateRange.end = this.utilService.resetDate(this.opts.calendarType);\n          this.rangeDateSelection({\n            isBegin: true,\n            date,\n            jsDate: this.utilService.myDateToJsDate(this.opts.calendarType, date),\n            dateFormat: dateFormat,\n            formatted: this.utilService.formatDate(this.opts.calendarType, date, dateFormat, monthLabels),\n            epoc: this.utilService.getEpocTime(this.opts.calendarType, date)\n          });\n        } else if (!isBeginDateInitialized) {\n          // begin date\n          this.selectedDateRange.begin = date;\n          this.rangeDateSelection({\n            isBegin: true,\n            date,\n            jsDate: this.utilService.myDateToJsDate(this.opts.calendarType, date),\n            dateFormat: dateFormat,\n            formatted: this.utilService.formatDate(this.opts.calendarType, date, dateFormat, monthLabels),\n            epoc: this.utilService.getEpocTime(this.opts.calendarType, date)\n          });\n        } else {\n          // second selection\n          const firstDateEarlier = this.utilService.isDateEarlier(this.opts.calendarType, date, this.selectedDateRange.begin);\n          if (firstDateEarlier) {\n            this.selectedDateRange.begin = date;\n            this.rangeDateSelection({\n              isBegin: true,\n              date,\n              jsDate: this.utilService.myDateToJsDate(this.opts.calendarType, date),\n              dateFormat: dateFormat,\n              formatted: this.utilService.formatDate(this.opts.calendarType, date, dateFormat, monthLabels),\n              epoc: this.utilService.getEpocTime(this.opts.calendarType, date)\n            });\n          } else {\n            this.selectedDateRange.end = date;\n            this.rangeDateSelection({\n              isBegin: false,\n              date,\n              jsDate: this.utilService.myDateToJsDate(this.opts.calendarType, date),\n              dateFormat: dateFormat,\n              formatted: this.utilService.formatDate(this.opts.calendarType, date, dateFormat, monthLabels),\n              epoc: this.utilService.getEpocTime(this.opts.calendarType, date)\n            });\n            this.dateChanged(this.utilService.getDateModel(this.opts.calendarType, null, this.selectedDateRange, dateFormat, monthLabels, dateRangeDatesDelimiter), closeSelectorOnDateSelect);\n          }\n        }\n      } else {\n        // Single date\n        this.selectedDate = date;\n        this.dateChanged(this.utilService.getDateModel(this.opts.calendarType, this.selectedDate, null, dateFormat, monthLabels, dateRangeDatesDelimiter), closeSelectorOnDateSelect);\n      }\n    }\n    monthStartIdx(y, m) {\n      // Month start index\n      const d = new Date();\n      d.setDate(1);\n      d.setMonth(m - 1);\n      d.setFullYear(y);\n      const idx = d.getDay() + this.sundayIdx();\n      return idx >= 7 ? idx - 7 : idx;\n    }\n    isCurrDay(d, m, y, today) {\n      // Check is a given date the today\n      return d === today.day && m === today.month && y === today.year;\n    }\n    getDayNumber(date) {\n      // Get day number: su=0, mo=1, tu=2, we=3 ...\n      const {\n        year,\n        month,\n        day\n      } = date;\n      const d = this.utilService.getJsDate(this.opts.calendarType, year, month, day);\n      return d.getDay();\n    }\n    getWeekday(date) {\n      // Get weekday: su, mo, tu, we ...\n      return this.weekDayOpts[this.getDayNumber(date)];\n    }\n    sundayIdx() {\n      // Index of Sunday day\n      return this.dayIdx > 0 ? 7 - this.dayIdx : 0;\n    }\n    generateCalendar(m, y, notifyChange) {\n      this.dates.length = 0;\n      const today = this.utilService.getToday(this.opts.calendarType);\n      const monthStart = this.monthStartIdx(y, m);\n      const dInThisM = this.utilService.datesInMonth(this.opts.calendarType, m, y);\n      const dInPrevM = this.utilService.datesInPrevMonth(this.opts.calendarType, m, y);\n      let dayNbr = 1;\n      let month = m;\n      let cmo = MonthId.prev;\n      const {\n        rtl,\n        showWeekNumbers,\n        firstDayOfWeek\n      } = this.opts;\n      for (let i = 1; i < 7; i++) {\n        let col = rtl ? 6 : 0;\n        const week = [];\n        if (i === 1) {\n          // First week\n          const pm = dInPrevM - monthStart + 1;\n          // Previous month\n          for (let j = pm; j <= dInPrevM; j++) {\n            const date = {\n              year: m === 1 ? y - 1 : y,\n              month: m === 1 ? 12 : m - 1,\n              day: j\n            };\n            week.push({\n              dateObj: date,\n              cmo,\n              currDay: this.isCurrDay(j, month - 1, y, today),\n              disabledDate: this.utilService.isDisabledDate(this.opts.calendarType, date, this.opts),\n              markedDate: this.utilService.isMarkedDate(this.opts.calendarType, date, this.opts),\n              highlight: this.utilService.isHighlightedDate(this.opts.calendarType, date, this.opts),\n              row: i - 1,\n              col: rtl ? col-- : col++\n            });\n          }\n          cmo = MonthId.curr;\n          // Current month\n          const daysLeft = 7 - week.length;\n          for (let j = 0; j < daysLeft; j++) {\n            const date = {\n              year: y,\n              month: m,\n              day: dayNbr\n            };\n            week.push({\n              dateObj: date,\n              cmo,\n              currDay: this.isCurrDay(dayNbr, m, y, today),\n              disabledDate: this.utilService.isDisabledDate(this.opts.calendarType, date, this.opts),\n              markedDate: this.utilService.isMarkedDate(this.opts.calendarType, date, this.opts),\n              highlight: this.utilService.isHighlightedDate(this.opts.calendarType, date, this.opts),\n              row: i - 1,\n              col: rtl ? col-- : col++\n            });\n            dayNbr++;\n          }\n        } else {\n          // Rest of the weeks\n          for (let j = 1; j < 8; j++) {\n            if (dayNbr > dInThisM) {\n              // Next month\n              dayNbr = 1;\n              cmo = MonthId.next;\n              month = m + 1;\n            }\n            const date = {\n              year: cmo === MonthId.next && m === 12 ? y + 1 : y,\n              month: cmo === MonthId.curr ? m : cmo === MonthId.next && m < 12 ? m + 1 : 1,\n              day: dayNbr\n            };\n            week.push({\n              dateObj: date,\n              cmo,\n              currDay: this.isCurrDay(dayNbr, month, y, today),\n              disabledDate: this.utilService.isDisabledDate(this.opts.calendarType, date, this.opts),\n              markedDate: this.utilService.isMarkedDate(this.opts.calendarType, date, this.opts),\n              highlight: this.utilService.isHighlightedDate(this.opts.calendarType, date, this.opts),\n              row: i - 1,\n              col: rtl ? col-- : col++\n            });\n            dayNbr++;\n          }\n        }\n        const weekNbr = showWeekNumbers && firstDayOfWeek === MO ? this.utilService.getWeekNumber(this.opts.calendarType, week[0].dateObj) : 0;\n        this.dates.push({\n          week,\n          weekNbr\n        });\n      }\n      this.setDateViewHeaderBtnDisabledState(m, y);\n      if (notifyChange) {\n        // Notify parent\n        this.calendarViewChanged({\n          year: y,\n          month: m,\n          first: {\n            number: 1,\n            weekday: this.getWeekday({\n              year: y,\n              month: m,\n              day: 1\n            })\n          },\n          last: {\n            number: dInThisM,\n            weekday: this.getWeekday({\n              year: y,\n              month: m,\n              day: dInThisM\n            })\n          }\n        });\n      }\n    }\n    setDateViewHeaderBtnDisabledState(m, y) {\n      let dpm = false;\n      let dnm = false;\n      const {\n        disableHeaderButtons,\n        disableUntil,\n        disableSince,\n        enableDates,\n        minYear,\n        maxYear,\n        rtl\n      } = this.opts;\n      if (disableHeaderButtons) {\n        const duDate = {\n          year: m === 1 ? y - 1 : y,\n          month: m === 1 ? 12 : m - 1,\n          day: this.utilService.datesInMonth(this.opts.calendarType, m === 1 ? 12 : m - 1, m === 1 ? y - 1 : y)\n        };\n        const dsDate = {\n          year: m === 12 ? y + 1 : y,\n          month: m === 12 ? 1 : m + 1,\n          day: 1\n        };\n        dpm = this.utilService.isDisabledByDisableUntil(this.opts.calendarType, duDate, disableUntil) && !this.utilService.isPastDatesEnabled(this.opts.calendarType, duDate, enableDates);\n        dnm = this.utilService.isDisabledByDisableSince(this.opts.calendarType, dsDate, disableSince) && !this.utilService.isFutureDatesEnabled(this.opts.calendarType, dsDate, enableDates);\n      }\n      this.prevViewDisabled = m === 1 && y === minYear || dpm;\n      this.nextViewDisabled = m === 12 && y === maxYear || dnm;\n      if (rtl) {\n        this.swapHeaderBtnDisabled();\n      }\n    }\n    setMonthViewHeaderBtnDisabledState(y) {\n      let dpm = false;\n      let dnm = false;\n      const {\n        disableHeaderButtons,\n        disableUntil,\n        disableSince,\n        enableDates,\n        minYear,\n        maxYear,\n        rtl\n      } = this.opts;\n      if (disableHeaderButtons) {\n        const duDate = {\n          year: y - 1,\n          month: 12,\n          day: 31\n        };\n        const dsDate = {\n          year: y + 1,\n          month: 1,\n          day: 1\n        };\n        dpm = this.utilService.isDisabledByDisableUntil(this.opts.calendarType, duDate, disableUntil) && !this.utilService.isPastDatesEnabled(this.opts.calendarType, duDate, enableDates);\n        dnm = this.utilService.isDisabledByDisableSince(this.opts.calendarType, dsDate, disableSince) && !this.utilService.isFutureDatesEnabled(this.opts.calendarType, dsDate, enableDates);\n      }\n      this.prevViewDisabled = y === minYear || dpm;\n      this.nextViewDisabled = y === maxYear || dnm;\n      if (rtl) {\n        this.swapHeaderBtnDisabled();\n      }\n    }\n    setYearViewHeaderBtnDisabledState(yp, yn) {\n      let dpy = false;\n      let dny = false;\n      const {\n        disableHeaderButtons,\n        disableUntil,\n        disableSince,\n        enableDates,\n        minYear,\n        maxYear,\n        rtl\n      } = this.opts;\n      if (disableHeaderButtons) {\n        const duDate = {\n          year: yp - 1,\n          month: 12,\n          day: 31\n        };\n        const dsDate = {\n          year: yn + 1,\n          month: 1,\n          day: 1\n        };\n        dpy = this.utilService.isDisabledByDisableUntil(this.opts.calendarType, duDate, disableUntil) && !this.utilService.isPastDatesEnabled(this.opts.calendarType, duDate, enableDates);\n        dny = this.utilService.isDisabledByDisableSince(this.opts.calendarType, dsDate, disableSince) && !this.utilService.isFutureDatesEnabled(this.opts.calendarType, dsDate, enableDates);\n      }\n      this.prevViewDisabled = yp <= minYear || dpy;\n      this.nextViewDisabled = yn >= maxYear || dny;\n      if (rtl) {\n        this.swapHeaderBtnDisabled();\n      }\n    }\n    swapHeaderBtnDisabled() {\n      [this.prevViewDisabled, this.nextViewDisabled] = [this.nextViewDisabled, this.prevViewDisabled];\n    }\n    static #_ = this.ɵfac = function CalendarComponent_Factory(t) {\n      return new (t || CalendarComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.UtilService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CalendarComponent,\n      selectors: [[\"lib-angular-mydatepicker-calendar\"]],\n      viewQuery: function CalendarComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectorEl = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.styleEl = _t.first);\n        }\n      },\n      hostVars: 2,\n      hostBindings: function CalendarComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"position\", ctx.position);\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([UtilService])],\n      decls: 10,\n      vars: 27,\n      consts: [[\"styleEl\", \"\"], [\"tabindex\", \"0\", 1, \"myDpSelector\", 3, \"libAngularMyDatePickerCalendar\", \"ngClass\", \"keyup\"], [\"selectorEl\", \"\"], [3, \"opts\", \"yearsDuration\", \"visibleMonth\", \"selectMonth\", \"selectYear\", \"prevViewDisabled\", \"nextViewDisabled\", \"prevNavigateBtnClicked\", \"nextNavigateBtnClicked\", \"monthViewBtnClicked\", \"yearViewBtnClicked\"], [3, \"opts\", \"dates\", \"weekDays\", \"selectedDate\", \"selectedDateRange\", \"viewChanged\", \"dayCellClicked\", \"dayCellKeyDown\", \"viewActivated\", 4, \"ngIf\"], [3, \"opts\", \"months\", \"viewChanged\", \"monthCellClicked\", \"monthCellKeyDown\", \"viewActivated\", 4, \"ngIf\"], [3, \"opts\", \"years\", \"viewChanged\", \"yearCellClicked\", \"yearCellKeyDown\", \"viewActivated\", 4, \"ngIf\"], [3, \"opts\", \"footerBarTxtClicked\", 4, \"ngIf\"], [3, \"opts\", \"dates\", \"weekDays\", \"selectedDate\", \"selectedDateRange\", \"viewChanged\", \"dayCellClicked\", \"dayCellKeyDown\", \"viewActivated\"], [3, \"opts\", \"months\", \"viewChanged\", \"monthCellClicked\", \"monthCellKeyDown\", \"viewActivated\"], [3, \"opts\", \"years\", \"viewChanged\", \"yearCellClicked\", \"yearCellKeyDown\", \"viewActivated\"], [3, \"opts\", \"footerBarTxtClicked\"]],\n      template: function CalendarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"span\", null, 0);\n          i0.ɵɵelementStart(2, \"div\")(3, \"div\", 1, 2);\n          i0.ɵɵlistener(\"keyup\", function CalendarComponent_Template_div_keyup_3_listener($event) {\n            return ctx.onCloseSelector($event);\n          });\n          i0.ɵɵelementStart(5, \"lib-selection-bar\", 3);\n          i0.ɵɵlistener(\"prevNavigateBtnClicked\", function CalendarComponent_Template_lib_selection_bar_prevNavigateBtnClicked_5_listener() {\n            return ctx.onPrevNavigateBtnClicked();\n          })(\"nextNavigateBtnClicked\", function CalendarComponent_Template_lib_selection_bar_nextNavigateBtnClicked_5_listener() {\n            return ctx.onNextNavigateBtnClicked();\n          })(\"monthViewBtnClicked\", function CalendarComponent_Template_lib_selection_bar_monthViewBtnClicked_5_listener() {\n            return ctx.onMonthViewBtnClicked();\n          })(\"yearViewBtnClicked\", function CalendarComponent_Template_lib_selection_bar_yearViewBtnClicked_5_listener() {\n            return ctx.onYearViewBtnClicked();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, CalendarComponent_lib_day_view_6_Template, 1, 6, \"lib-day-view\", 4)(7, CalendarComponent_lib_month_view_7_Template, 1, 3, \"lib-month-view\", 5)(8, CalendarComponent_lib_year_view_8_Template, 1, 3, \"lib-year-view\", 6)(9, CalendarComponent_lib_footer_bar_9_Template, 1, 1, \"lib-footer-bar\", 7);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassMapInterpolate1(\"ng-mydp \", (ctx.opts.stylesData == null ? null : ctx.opts.stylesData.selector) || \"\", \"\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"libAngularMyDatePickerCalendar\", i0.ɵɵpureFunction4(16, _c2, ctx.opts.inline, ctx.opts.selectorWidth, ctx.opts.selectorHeight, ctx.selectorPos))(\"ngClass\", i0.ɵɵpureFunction5(21, _c3, ctx.opts.showSelectorArrow, ctx.opts.showSelectorArrow && !ctx.opts.alignSelectorRight, ctx.opts.showSelectorArrow && ctx.opts.alignSelectorRight, !ctx.opts.inline, ctx.opts.inline));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"opts\", ctx.opts)(\"yearsDuration\", ctx.yearsDuration)(\"visibleMonth\", ctx.visibleMonth)(\"selectMonth\", ctx.selectMonth)(\"selectYear\", ctx.selectYear)(\"prevViewDisabled\", ctx.prevViewDisabled)(\"nextViewDisabled\", ctx.nextViewDisabled);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.selectMonth && !ctx.selectYear);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectMonth);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectYear);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.opts.showFooterToday);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgIf, i3.SelectionBarComponent, i4.DayViewComponent, i5.MonthViewComponent, i6.YearViewComponent, i7.FooterBarComponent, i8.AngularMyDatePickerCalendarDirective],\n      styles: [\".ng-mydp{position:static}.ng-myrtl{direction:rtl}.ng-mydp *{box-sizing:border-box;font-family:Arial,Helvetica,sans-serif;padding:0;margin:0}.ng-mydp table{display:table;border-spacing:0}.ng-mydp table td,.ng-mydp table th{padding:0;margin:0;vertical-align:middle;border:none}.myDpSelector{padding:4px;border:1px solid #CCC;background-color:#fff;border-radius:4px;z-index:100000}.myDpViewChangeAnimation{animation:myDpViewChangeAnimation .2s linear}@keyframes myDpViewChangeAnimation{0%{transform:scale(.75);opacity:.1}to{transform:scale(1);opacity:1}}.myDpAnimationFadeIn{animation:myDpAnimationFadeIn .5s linear}@keyframes myDpAnimationFadeIn{0%{transform:translateY(-50px);opacity:0}to{transform:translateY(0);opacity:1}}.myDpAnimationFadeOut{animation:myDpAnimationFadeOut .3s linear forwards}@keyframes myDpAnimationFadeOut{0%{transform:translateY(0);opacity:1}to{transform:translateY(-50px);opacity:0}}.myDpAnimationScaleTopIn{animation:myDpAnimationScaleTopIn .3s linear}@keyframes myDpAnimationScaleTopIn{0%{transform:scaleY(0);transform-origin:100% 0%}to{transform:scaleY(1);transform-origin:100% 0%}}.myDpAnimationScaleTopOut{animation:myDpAnimationScaleTopOut .3s linear forwards}@keyframes myDpAnimationScaleTopOut{0%{transform:scaleY(1);transform-origin:100% 0%;opacity:1}to{transform:scaleY(0);transform-origin:100% 0%;opacity:0}}.myDpAnimationScaleCenterIn{animation:myDpAnimationScaleCenterIn .3s linear}@keyframes myDpAnimationScaleCenterIn{0%{transform:scale(0)}to{transform:scale(1)}}.myDpAnimationScaleCenterOut{animation:myDpAnimationScaleCenterOut .3s linear forwards}@keyframes myDpAnimationScaleCenterOut{0%{transform:scale(1);opacity:1}to{transform:scale(0);opacity:0}}.myDpAnimationRotateIn{animation:myDpAnimationRotateIn .3s linear}@keyframes myDpAnimationRotateIn{0%{transform:scale(.3) rotate(-45deg);opacity:0}to{transform:scale(1) rotate(0);opacity:1}}.myDpAnimationRotateOut{animation:myDpAnimationRotateOut .3s linear forwards}@keyframes myDpAnimationRotateOut{0%{transform:scale(1) rotate(0);opacity:1}to{transform:scale(.3) rotate(-45deg);opacity:0}}.myDpAnimationFlipDiagonalIn{animation:myDpAnimationFlipDiagonalIn .3s linear}@keyframes myDpAnimationFlipDiagonalIn{0%{transform:rotate3d(1,1,0,-78deg)}to{transform:rotate3d(1,1,0,0)}}.myDpAnimationFlipDiagonalOut{animation:myDpAnimationFlipDiagonalOut .3s linear forwards}@keyframes myDpAnimationFlipDiagonalOut{0%{transform:rotate3d(1,1,0,0);opacity:1}to{transform:rotate3d(1,1,0,78deg);opacity:0}}.myDpSelectorAbsolute{position:absolute}.myDpSelectorPosInitial{position:initial}.myDpSelector:focus{box-shadow:-1px 1px 6px #add8e6;outline:none}.myDpSelectorArrow{background:#fff}.myDpSelectorArrow:after,.myDpSelectorArrow:before{bottom:100%;border:solid transparent;content:\\\" \\\";height:0;width:0;position:absolute}.myDpSelectorArrow:after{border-color:#fafafa00;border-bottom-color:#fafafa;border-width:10px;margin-left:-10px}.myDpSelectorArrow:before{border-color:#ccc0;border-bottom-color:#ccc;border-width:11px;margin-left:-11px}.myDpSelectorArrow:focus:before{border-bottom-color:#add8e6}.myDpSelectorArrowLeft:after,.myDpSelectorArrowLeft:before{left:24px}.myDpSelectorArrowRight:after,.myDpSelectorArrowRight:before{left:86%}::-ms-clear{display:none}.myDpCalTable,.myDpMonthTable,.myDpYearTable,.myDpFooterBar{border-radius:0 0 4px 4px}.myDpCalTable.myDpNoFooter tbody tr:nth-child(6) td:first-child,.myDpMonthTable.myDpNoFooter tbody tr:nth-child(4) td:first-child,.myDpYearTable.myDpNoFooter tbody tr:nth-child(5) td:first-child{border-bottom-left-radius:4px}.myDpCalTable.myDpNoFooter tbody tr:nth-child(6) td:last-child,.myDpMonthTable.myDpNoFooter tbody tr:nth-child(4) td:last-child,.myDpYearTable.myDpNoFooter tbody tr:nth-child(5) td:last-child{border-bottom-right-radius:4px}.myDpCalTable,.myDpMonthTable,.myDpYearTable{table-layout:fixed;width:100%;background-color:#fff;font-size:14px}.myDpFooter{height:calc(100% - 60px)}.myDpNoFooter{height:calc(100% - 30px)}.myDpCalTable,.myDpMonthTable,.myDpYearTable,.myDpWeekDayTitle,.myDpDaycell,.myDpMonthcell,.myDpYearcell{border-collapse:collapse;color:#333;line-height:1.1}.myDpDaycell,.myDpMonthcell,.myDpYearcell{padding:4px;text-align:center;outline:none}.myDpDaycell{background-color:#fff;position:relative}.myDpWeekDayTitle{background-color:transparent;color:#333;font-size:13px;font-weight:400;vertical-align:middle;max-width:36px;overflow:hidden;white-space:nowrap;height:23px;text-align:center}.myDpWeekDayTitleWeekNbr{width:20px}.myDpMonthcell{background-color:#fff;overflow:hidden;white-space:nowrap}.myDpYearcell{background-color:#fff;width:20%}.myDpMonthNbr{font-size:10px;display:block}.myDpDaycellWeekNbr{font-size:9px;cursor:default;text-align:center;color:#333}.myDpPrevMonth,.myDpNextMonth{color:#999}.myDpMonthYearSelBar{display:flex;height:30px;background-color:#fff;border-top-left-radius:4px;border-top-right-radius:4px}.myDpPrevBtn{margin-left:10px}.myDpNextBtn{margin-left:auto;margin-right:10px}.myDpMonthYearText{width:100%;line-height:30px;text-align:center}.myDpFooterBar{display:flex;align-items:center;justify-content:center;height:30px;background-color:#fff}.myDpHeaderBtn{background:transparent;padding:0;border:none;line-height:30px;height:28px;margin-top:1px;color:#000;outline:none;cursor:default}.myDpFooterBtn{margin:0 10px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.myDpMonthBtn,.myDpYearBtn{font-size:16px}.myDpMonthBtn{margin-right:6px}.myDpHighlight{color:#c30000}.myDpDimDay{opacity:.5}.myDpCurrMonth{background-color:#fff;font-weight:400}.myDpMarkDate{position:absolute;top:2px;left:2px;border-right:8px solid transparent}.myDpMarkCurrDay,.myDpMarkCurrMonth,.myDpMarkCurrYear{border-bottom:2px solid #333}.myDpHeaderLabelBtnNotEdit{cursor:default}.myDpHeaderBtn::-moz-focus-inner,.myDpPrevBtn::-moz-focus-inner,.myDpNextBtn::-moz-focus-inner{border:0}.myDpHeaderBtn:focus,.myDpMonthLabel:focus,.myDpYearLabel:focus,.myDpFooterBtn:focus{color:#66afe9;outline:none}.myDpDaycell:focus,.myDpMonthcell:focus,.myDpYearcell:focus{box-shadow:inset 0 0 0 1px #66afe9}.myDpTableSingleDay:hover,.myDpTableSingleMonth:hover,.myDpTableSingleYear:hover{background-color:#ddd}.myDpMonthLabel,.myDpYearLabel,.myDpDaycell,.myDpMonthcell,.myDpYearcell{cursor:pointer}.myDpHeaderBtnEnabled:hover,.myDpMonthLabel:hover,.myDpYearLabel:hover,.myDpFooterBtn:hover{color:#777}.myDpHeaderBtnEnabled{cursor:pointer}.myDpHeaderBtnDisabled{cursor:not-allowed;opacity:.65}.myDpDisabled{cursor:default;color:#777;background:repeating-linear-gradient(-45deg,#ccc 7px,#ccc 8px,transparent 7px,transparent 14px)}.myDpRangeColor{background-color:#dbeaff}.myDpRangeBegin,.myDpRangeEnd,.myDpSelectedDay,.myDpSelectedMonth,.myDpSelectedYear{border:none;background-color:#8ebfff}@font-face{font-family:angular-mydatepicker;src:url(data:application/octet-stream;base64,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) format(\\\"woff\\\");font-weight:400;font-style:normal}.myDpIcon{font-family:angular-mydatepicker;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#222;font-size:20px}.myDpIconLeftArrow:before{content:\\\"\\\\e800\\\"}.myDpIconRightArrow:before{content:\\\"\\\\e801\\\"}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return CalendarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}