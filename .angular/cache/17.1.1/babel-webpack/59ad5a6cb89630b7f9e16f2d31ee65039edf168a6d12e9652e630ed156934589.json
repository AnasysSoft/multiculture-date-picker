{"ast":null,"code":"import { EventEmitter, SimpleChanges } from \"@angular/core\";\nimport { UtilService } from \"../../services/angular-mydatepicker.util.service\";\nimport { KeyCode } from \"../../enums/key-code.enum\";\nimport { MonthId } from \"../../enums/month-id.enum\";\nimport { ActiveView } from \"../../enums/active-view.enum\";\nimport { OPTS, DATES, WEEK_DAYS, SELECTED_DATE, SELECTED_DATE_RANGE } from \"../../constants/constants\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/angular-mydatepicker.util.service\";\nimport * as i2 from \"@angular/common\";\nfunction DayViewComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 4);\n    i0.ɵɵtext(1, \"#\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DayViewComponent_th_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const d_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(d_r3);\n  }\n}\nfunction DayViewComponent_tr_6_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const w_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(w_r4.weekNbr);\n  }\n}\nconst _c0 = a0 => ({\n  \"border-top\": a0\n});\nfunction DayViewComponent_tr_6_td_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 12);\n  }\n  if (rf & 2) {\n    const d_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(1, _c0, \"8px solid \" + d_r8.markedDate.color));\n  }\n}\nconst _c1 = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => ({\n  \"myDpRangeColor\": a0,\n  \"myDpPrevMonth\": a1,\n  \"myDpCurrMonth\": a2,\n  \"myDpNextMonth\": a3,\n  \"myDpSelectedDay\": a4,\n  \"myDpRangeBegin\": a5,\n  \"myDpRangeEnd\": a6,\n  \"myDpDisabled\": a7,\n  \"myDpTableSingleDay\": a8\n});\nconst _c2 = (a0, a1, a2) => ({\n  \"myDpMarkCurrDay\": a0,\n  \"myDpDimDay\": a1,\n  \"myDpHighlight\": a2\n});\nconst _c3 = a0 => [a0];\nfunction DayViewComponent_tr_6_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 9);\n    i0.ɵɵlistener(\"click\", function DayViewComponent_tr_6_td_2_Template_td_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const d_r8 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onDayCellClicked($event, d_r8));\n    })(\"keydown\", function DayViewComponent_tr_6_td_2_Template_td_keydown_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const d_r8 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDayCellKeyDown($event, d_r8));\n    })(\"mouseenter\", function DayViewComponent_tr_6_td_2_Template_td_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const d_r8 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDayCellMouseEnter(d_r8));\n    })(\"mouseleave\", function DayViewComponent_tr_6_td_2_Template_td_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDayCellMouseLeave());\n    });\n    i0.ɵɵtemplate(1, DayViewComponent_tr_6_td_2_span_1_Template, 1, 3, \"span\", 10);\n    i0.ɵɵelementStart(2, \"span\", 11);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const d_r8 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate4(\"d_\", d_r8.row, \"_\", d_r8.col, \" myDpDaycell \", d_r8.markedDate.styleClass, \" \", d_r8.disabledDate.styleClass, \"\");\n    i0.ɵɵpropertyInterpolate2(\"id\", \"d_\", d_r8.row, \"_\", d_r8.col, \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunctionV(17, _c1, [ctx_r6.isDateInRange(d_r8.dateObj) || d_r8.range, d_r8.cmo === ctx_r6.prevMonthId, d_r8.cmo === ctx_r6.currMonthId && !d_r8.disabledDate.disabled, d_r8.cmo === ctx_r6.nextMonthId, !ctx_r6.opts.dateRange && ctx_r6.isDateSame(d_r8.dateObj) || ctx_r6.opts.dateRange && ctx_r6.isDateRangeBeginOrEndSame(d_r8.dateObj), ctx_r6.opts.dateRange && ctx_r6.isDateRangeBegin(d_r8.dateObj), ctx_r6.opts.dateRange && ctx_r6.isDateRangeEnd(d_r8.dateObj), d_r8.disabledDate.disabled && !d_r8.disabledDate.styleClass.length, !d_r8.disabledDate.disabled]));\n    i0.ɵɵattribute(\"tabindex\", !d_r8.disabledDate.disabled ? 0 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", d_r8.markedDate.marked && d_r8.markedDate.color.length);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(27, _c2, d_r8.currDay && ctx_r6.opts.markCurrentDay, d_r8.highlight && (d_r8.cmo === ctx_r6.prevMonthId || d_r8.cmo === ctx_r6.nextMonthId || d_r8.disabledDate.disabled), d_r8.highlight));\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpureFunction1(31, _c3, i0.ɵɵpipeBind2(3, 14, d_r8.dateObj.month + \"/\" + d_r8.dateObj.day + \"/\" + d_r8.dateObj.year, \"fullDate\")));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(d_r8.dateObj.day);\n  }\n}\nfunction DayViewComponent_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, DayViewComponent_tr_6_td_1_Template, 2, 1, \"td\", 6)(2, DayViewComponent_tr_6_td_2_Template, 5, 33, \"td\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const w_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.opts.showWeekNumbers && ctx_r2.opts.firstDayOfWeek === \"mo\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", w_r4.week);\n  }\n}\nconst _c4 = (a0, a1, a2, a3) => ({\n  \"ng-myrtl\": a0,\n  \"myDpFooter\": a1,\n  \"myDpNoFooter\": a2,\n  \"myDpViewChangeAnimation\": a3\n});\nexport let DayViewComponent = /*#__PURE__*/(() => {\n  class DayViewComponent {\n    constructor(utilService) {\n      this.utilService = utilService;\n      this.dayCellClicked = new EventEmitter();\n      this.dayCellKeyDown = new EventEmitter();\n      this.viewActivated = new EventEmitter();\n      this.prevMonthId = MonthId.prev;\n      this.currMonthId = MonthId.curr;\n      this.nextMonthId = MonthId.next;\n    }\n    ngOnChanges(changes) {\n      if (changes.hasOwnProperty(OPTS)) {\n        this.opts = changes[OPTS].currentValue;\n      }\n      if (changes.hasOwnProperty(DATES)) {\n        this.dates = changes[DATES].currentValue;\n      }\n      if (changes.hasOwnProperty(WEEK_DAYS)) {\n        this.weekDays = changes[WEEK_DAYS].currentValue;\n      }\n      if (changes.hasOwnProperty(SELECTED_DATE)) {\n        this.selectedDate = changes[SELECTED_DATE].currentValue;\n      }\n      if (changes.hasOwnProperty(SELECTED_DATE_RANGE)) {\n        this.selectedDateRange = changes[SELECTED_DATE_RANGE].currentValue;\n      }\n    }\n    ngAfterViewInit() {\n      this.viewActivated.emit(ActiveView.Date);\n    }\n    onDayCellClicked(event, cell) {\n      event.stopPropagation();\n      if (cell.disabledDate.disabled) {\n        return;\n      }\n      this.dayCellClicked.emit(cell);\n    }\n    onDayCellKeyDown(event, cell) {\n      const keyCode = this.utilService.getKeyCodeFromEvent(this.opts.calendarType, event);\n      if (keyCode !== KeyCode.tab) {\n        event.preventDefault();\n        if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {\n          this.onDayCellClicked(event, cell);\n        } else if (this.opts.moveFocusByArrowKeys) {\n          this.dayCellKeyDown.emit(event);\n        }\n      }\n    }\n    onDayCellMouseEnter(cell) {\n      if (this.utilService.isInitializedDate(this.opts.calendarType, this.selectedDateRange.begin) && !this.utilService.isInitializedDate(this.opts.calendarType, this.selectedDateRange.end)) {\n        for (const w of this.dates) {\n          for (const day of w.week) {\n            day.range = this.utilService.isDateSameOrEarlier(this.opts.calendarType, this.selectedDateRange.begin, day.dateObj) && this.utilService.isDateSameOrEarlier(this.opts.calendarType, day.dateObj, cell.dateObj);\n          }\n        }\n      }\n    }\n    onDayCellMouseLeave() {\n      for (const w of this.dates) {\n        for (const day of w.week) {\n          day.range = false;\n        }\n      }\n    }\n    isDateInRange(date) {\n      return this.utilService.isDateInRange(this.opts.calendarType, date, this.selectedDateRange);\n    }\n    isDateSame(date) {\n      return this.utilService.isDateSame(this.opts.calendarType, this.selectedDate, date);\n    }\n    isDateRangeBeginOrEndSame(date) {\n      return this.utilService.isDateRangeBeginOrEndSame(this.opts.calendarType, this.selectedDateRange, date);\n    }\n    isDateRangeBegin(date) {\n      return this.utilService.isDateRangeBegin(this.opts.calendarType, this.selectedDateRange, date);\n    }\n    isDateRangeEnd(date) {\n      return this.utilService.isDateRangeEnd(this.opts.calendarType, this.selectedDateRange, date);\n    }\n    static #_ = this.ɵfac = function DayViewComponent_Factory(t) {\n      return new (t || DayViewComponent)(i0.ɵɵdirectiveInject(i1.UtilService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DayViewComponent,\n      selectors: [[\"lib-day-view\"]],\n      inputs: {\n        opts: \"opts\",\n        dates: \"dates\",\n        weekDays: \"weekDays\",\n        selectedDate: \"selectedDate\",\n        selectedDateRange: \"selectedDateRange\",\n        viewChanged: \"viewChanged\"\n      },\n      outputs: {\n        dayCellClicked: \"dayCellClicked\",\n        dayCellKeyDown: \"dayCellKeyDown\",\n        viewActivated: \"viewActivated\"\n      },\n      features: [i0.ɵɵProvidersFeature([UtilService]), i0.ɵɵNgOnChangesFeature],\n      decls: 7,\n      vars: 9,\n      consts: [[1, \"myDpCalTable\", 3, \"ngClass\"], [\"class\", \"myDpWeekDayTitle myDpWeekDayTitleWeekNbr\", 4, \"ngIf\"], [\"class\", \"myDpWeekDayTitle\", \"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"myDpWeekDayTitle\", \"myDpWeekDayTitleWeekNbr\"], [\"scope\", \"col\", 1, \"myDpWeekDayTitle\"], [\"class\", \"myDpDaycellWeekNbr\", 4, \"ngIf\"], [3, \"id\", \"class\", \"ngClass\", \"click\", \"keydown\", \"mouseenter\", \"mouseleave\", 4, \"ngFor\", \"ngForOf\"], [1, \"myDpDaycellWeekNbr\"], [3, \"id\", \"ngClass\", \"click\", \"keydown\", \"mouseenter\", \"mouseleave\"], [\"class\", \"myDpMarkDate\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"myDpDayValue\", 3, \"ngClass\"], [1, \"myDpMarkDate\", 3, \"ngStyle\"]],\n      template: function DayViewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\");\n          i0.ɵɵtemplate(3, DayViewComponent_th_3_Template, 2, 0, \"th\", 1)(4, DayViewComponent_th_4_Template, 2, 1, \"th\", 2);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"tbody\");\n          i0.ɵɵtemplate(6, DayViewComponent_tr_6_Template, 3, 2, \"tr\", 3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(4, _c4, ctx.opts.rtl, ctx.opts.showFooterToday, !ctx.opts.showFooterToday, ctx.opts.viewChangeAnimation && ctx.viewChanged));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.opts.showWeekNumbers && ctx.opts.firstDayOfWeek === \"mo\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.weekDays);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.dates);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgStyle, i2.DatePipe],\n      encapsulation: 2\n    });\n  }\n  return DayViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}